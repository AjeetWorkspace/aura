{"version":3,"file":"engine_compat.js","sources":["../src/framework/assert.ts","../src/framework/language.ts","../src/framework/dom.ts","../src/framework/class-list.ts","../src/framework/context.ts","../src/framework/utils.ts","../src/framework/services.ts","../src/framework/hook.ts","../src/framework/api.ts","../src/framework/compat.ts","../src/framework/membrane.ts","../src/framework/xproxy.ts","../src/framework/template.ts","../src/framework/defer.ts","../src/framework/invoker.ts","../src/framework/watcher.ts","../src/framework/properties.ts","../src/framework/piercing.ts","../src/framework/component.ts","../src/framework/root.ts","../src/framework/html-element.ts","../src/framework/def.ts","../src/framework/vm.ts","../src/framework/modules/component-init.ts","../src/framework/modules/component-props.ts","../src/framework/modules/component-attrs.ts","../src/framework/modules/component-events.ts","../src/framework/modules/component-classes.ts","../src/framework/modules/component-slotset.ts","../src/framework/modules/component-children.ts","../src/framework/modules/props.ts","../src/3rdparty/snabbdom/is.ts","../src/3rdparty/snabbdom/htmldomapi.ts","../src/3rdparty/snabbdom/snabbdom.ts","../src/framework/modules/attrs.ts","../src/framework/modules/styles.ts","../src/framework/modules/classes.ts","../src/framework/modules/events.ts","../src/framework/modules/uid.ts","../src/framework/patch.ts","../src/framework/upgrade.ts"],"sourcesContent":["const compareDocumentPosition = Node.prototype.compareDocumentPosition;\nconst { DOCUMENT_POSITION_CONTAINS } = Node;\n\nconst assert = {\n    invariant(value: any, msg: string) {\n        if (!value) {\n            throw new Error(`Invariant Violation: ${msg}`);\n        }\n    },\n    isTrue(value: any, msg: string) {\n        if (!value) {\n            throw new Error(`Assert Violation: ${msg}`);\n        }\n    },\n    isFalse(value: any, msg: string) {\n        if (value) {\n            throw new Error(`Assert Violation: ${msg}`);\n        }\n    },\n    block(fn: () => void) {\n        fn();\n    },\n    vnode(vnode: VNode) {\n        assert.isTrue(vnode && \"sel\" in vnode && \"data\" in vnode && \"children\" in vnode && \"text\" in vnode && \"elm\" in vnode && \"key\" in vnode, `${vnode} is not a vnode.`);\n    },\n    vm(vm: VM) {\n        assert.isTrue(vm && \"component\" in vm, `${vm} is not a vm.`);\n    },\n    fail(msg: string) {\n        throw new Error(msg);\n    },\n    logError(msg: string) {\n        try {\n            throw new Error(msg);\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    logWarning(msg: string) {\n        try {\n            throw new Error(msg);\n        } catch (e) {\n            console.warn(e);\n        }\n    },\n    childNode(container: Node, node: Node, msg: string) {\n        assert.isTrue(compareDocumentPosition.call(node, container) & DOCUMENT_POSITION_CONTAINS, msg || `${node} must be a child node of ${container}`);\n    }\n};\n\nexport default assert;\n","const {\n    freeze,\n    seal,\n    keys,\n    create,\n    assign,\n    defineProperty,\n    getPrototypeOf,\n    setPrototypeOf,\n    getOwnPropertyDescriptor,\n    getOwnPropertyNames,\n    defineProperties,\n    getOwnPropertySymbols,\n    hasOwnProperty,\n    preventExtensions,\n    isExtensible,\n} = Object;\nconst isArray = Array.isArray;\nconst {\n    filter: ArrayFilter,\n    slice: ArraySlice,\n    splice: ArraySplice,\n    indexOf: ArrayIndexOf,\n    push: ArrayPush,\n    map: ArrayMap,\n    forEach,\n} = Array.prototype;\n\nexport {\n    freeze,\n    seal,\n    keys,\n    create,\n    assign,\n    defineProperty,\n    defineProperties,\n    getPrototypeOf,\n    setPrototypeOf,\n    getOwnPropertyDescriptor,\n    getOwnPropertyNames,\n    getOwnPropertySymbols,\n    hasOwnProperty,\n    preventExtensions,\n    isExtensible,\n    ArraySlice,\n    ArraySplice,\n    ArrayFilter,\n    ArrayMap,\n    isArray,\n    ArrayIndexOf,\n    ArrayPush,\n    forEach,\n}\n\nexport function isUndefined(obj: any): boolean {\n    return obj === undefined;\n}\n\nexport function isNull(obj: any): boolean {\n    return obj === null;\n}\n\nexport function isTrue(obj: any): boolean {\n    return obj === true;\n}\n\nexport function isFunction(obj: any): boolean {\n    return typeof obj === 'function';\n}\nexport function isObject(obj: any): boolean {\n    return typeof obj === 'object';\n}\n\nexport function isString(obj: any): boolean {\n    return typeof obj === 'string';\n}\n\nexport function isNumber(obj: any): boolean {\n    return typeof obj === 'number';\n}\n\nexport function isPromise(obj: any): boolean {\n    return typeof obj === 'object' && obj === Promise.resolve(obj);\n}\n\nconst OtS = {}.toString;\nexport function toString(obj: any): string {\n    if (obj && typeof obj === 'object' && !obj.toString) {\n        return OtS.call(obj);\n    }\n    return obj + '';\n}\n\nexport function bind(fn: Function, ctx: Object): Function {\n    function boundFn(a: any): any {\n        const l = arguments.length\n        return l\n            ? l > 1\n                ? fn.apply(ctx, arguments)\n                : fn.call(ctx, a)\n            : fn.call(ctx)\n    }\n    return boundFn;\n}\n","// Few more execptions that are using the attribute name to match the property in lowercase.\n// this list was compiled from https://msdn.microsoft.com/en-us/library/ms533062(v=vs.85).aspx\n// and https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n// Note: this list most be in sync with the compiler as well.\nexport const HTMLPropertyNamesWithLowercasedReflectiveAttributes = [\n    'accessKey',\n    'readOnly',\n    'tabIndex',\n    'bgColor',\n    'colSpan',\n    'rowSpan',\n    'contentEditable',\n    'dateTime',\n    'formAction',\n    'isMap',\n    'maxLength',\n    'useMap',\n];\n\n// Global HTML Attributes & Properties\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\nexport const GlobalHTMLProperties = {\n    accessKey: {\n        attribute: 'accesskey',\n    },\n    accessKeyLabel: {\n        readOnly: true,\n    },\n    className: {\n        attribute: 'class',\n        error: `Using property \"className\" is an anti-pattern because of slow runtime behavior and conflicting with classes provided by the owner element. Instead use property \"classList\".`,\n    },\n    contentEditable: {\n        attribute: 'contenteditable',\n    },\n    isContentEditable: {\n        readOnly: true,\n    },\n    contextMenu: {\n        attribute: 'contextmenu',\n    },\n    dataset: {\n        readOnly: true,\n        msg: 'Using property \"dataset\" is an anti-pattern. Instead declare \\`static observedAttributes = [\"data-foo\"]\\` and use \\`attributeChangedCallback(attrName, oldValue, newValue)\\` to get a notification each time the attribute changes.',\n    },\n    dir: {\n        attribute: 'dir',\n    },\n    draggable: {\n        attribute: 'draggable',\n        experimental: true,\n    },\n    dropzone: {\n        attribute: 'dropzone',\n        readOnly: true,\n        experimental: true,\n    },\n    hidden: {\n        attribute: 'hidden',\n    },\n    itemScope: {\n        attribute: 'itemscope',\n        experimental: true,\n    },\n    itemType: {\n        attribute: 'itemtype',\n        readOnly: true,\n        experimental: true,\n    },\n    itemId: {\n        attribute: 'itemid',\n        experimental: true,\n    },\n    itemRef: {\n        attribute: 'itemref',\n        readOnly: true,\n        experimental: true,\n    },\n    itemProp: {\n        attribute: 'itemprop',\n        readOnly: true,\n        experimental: true,\n    },\n    itemValue: {\n        experimental: true,\n    },\n    lang: {\n        attribute: 'lang',\n    },\n    offsetHeight: {\n        readOnly: true,\n        experimental: true,\n    },\n    offsetLeft: {\n        readOnly: true,\n        experimental: true,\n    },\n    offsetParent: {\n        readOnly: true,\n        experimental: true,\n    },\n    offsetTop: {\n        readOnly: true,\n        experimental: true,\n    },\n    offsetWidth: {\n        readOnly: true,\n        experimental: true,\n    },\n    properties: {\n        readOnly: true,\n        experimental: true,\n    },\n    spellcheck: {\n        experimental: true,\n    },\n    style: {\n        attribute: 'style',\n        error: `Using property or attribute \"style\" is an anti-pattern. Instead use property \"classList\".`,\n    },\n    tabIndex: {\n        attribute: 'tabindex',\n    },\n    title: {\n        attribute: 'title',\n    },\n    translate: {\n        experimental: true,\n    },\n    // additional global attributes that are not present in the link above.\n    role: {\n        attribute: 'role',\n    },\n    slot: {\n        attribute: 'slot',\n        experimental: true,\n        error: `Using property or attribute \"slot\" is an anti-pattern.`\n    }\n};\n\n// TODO: complete this list with Element properties\n// https://developer.mozilla.org/en-US/docs/Web/API/Element\n\n// TODO: complete this list with Node properties\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n","import assert from \"./assert\";\nimport {\n    getOwnPropertyNames,\n    defineProperty,\n    isUndefined,\n    forEach,\n} from \"./language\";\n\nimport { ViewModelReflection } from \"./html-element\";\n\nfunction getLinkedElement(classList: ClassList): HTMLElement {\n    return classList[ViewModelReflection].vnode.elm;\n}\n\n// This needs some more work. ClassList is a weird DOM api because it\n// is a TokenList, but not an Array. For now, we are just implementing\n// the simplest one.\n// https://www.w3.org/TR/dom/#domtokenlist\nexport function ClassList(vm: VM): DOMTokenList {\n    assert.vm(vm);\n    defineProperty(this, ViewModelReflection, {\n        value: vm,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n    });\n}\n\nClassList.prototype = {\n    add() {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        const elm = getLinkedElement(this);\n        // Add specified class values. If these classes already exist in attribute of the element, then they are ignored.\n        forEach.call(arguments, (className: String) => {\n            className = className + '';\n            if (!cmpClasses[className]) {\n                cmpClasses[className] = true;\n                // this is not only an optimization, it is also needed to avoid adding the same\n                // class twice when the initial diffing algo kicks in without an old vm to track\n                // what was already added to the DOM.\n                if (vm.idx) {\n                    // we intentionally make a sync mutation here and also keep track of the mutation\n                    // for a possible rehydration later on without having to rehydrate just now.\n                    elm.classList.add(className);\n                }\n            }\n        });\n    },\n    remove() {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        const elm = getLinkedElement(this);\n        // Remove specified class values.\n        forEach.call(arguments, (className: String) => {\n            className = className + '';\n            if (cmpClasses[className]) {\n                cmpClasses[className] = false;\n                // this is not only an optimization, it is also needed to avoid removing the same\n                // class twice when the initial diffing algo kicks in without an old vm to track\n                // what was already added to the DOM.\n                if (vm.idx) {\n                    // we intentionally make a sync mutation here when needed and also keep track of the mutation\n                    // for a possible rehydration later on without having to rehydrate just now.\n                    const ownerClass = vm.vnode.data.class;\n                    // This is only needed if the owner is not forcing that class to be present in case of conflicts.\n                    if (isUndefined(ownerClass) || !ownerClass[className]) {\n                        elm.classList.remove(className);\n                    }\n                }\n            }\n        });\n    },\n    item(index: Number): string | void {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        // Return class value by index in collection.\n        return getOwnPropertyNames(cmpClasses)\n            .filter((className: string): boolean => cmpClasses[className + ''])[index] || null;\n    },\n    toggle(className: String, force: any): boolean {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        // When only one argument is present: Toggle class value; i.e., if class exists then remove it and return false, if not, then add it and return true.\n        // When a second argument is present: If the second argument evaluates to true, add specified class value, and if it evaluates to false, remove it.\n        if (arguments.length > 1) {\n            if (force) {\n                this.add(className);\n            } else if (!force) {\n                this.remove(className);\n            }\n            return !!force;\n        }\n        if (cmpClasses[className]) {\n            this.remove(className);\n            return false;\n        }\n        this.add(className);\n        return true;\n    },\n    contains(className: String): boolean {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        // Checks if specified class value exists in class attribute of the element.\n        return !!cmpClasses[className];\n    },\n    toString(): string {\n        const vm = this[ViewModelReflection];\n        const { cmpClasses } = vm;\n        return getOwnPropertyNames(cmpClasses).filter((className: string): boolean => cmpClasses[className + '']).join(' ');\n    }\n};\n","const topLevelContextSymbol = Symbol('Top Level Context');\n\nexport let currentContext = {};\n\ncurrentContext[topLevelContextSymbol] = true;\n\nexport function establishContext(ctx: Object) {\n    currentContext = ctx;\n}\n","import assert from \"./assert\";\nimport { create, seal, ArrayPush, freeze, isFunction } from \"./language\";\n\nlet nextTickCallbackQueue: Array<Callback> = [];\nconst SPACE_CHAR = 32;\n\nexport let EmptyObject = seal(create(null));\n\nfunction flushCallbackQueue() {\n    assert.invariant(nextTickCallbackQueue.length, `If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue instead of ${nextTickCallbackQueue}.`);\n    const callbacks: Array<Callback> = nextTickCallbackQueue;\n    nextTickCallbackQueue = []; // reset to a new queue\n    for (let i = 0, len = callbacks.length; i < len; i += 1) {\n        callbacks[i]();\n    }\n}\n\nexport function addCallbackToNextTick(callback: Callback) {\n    assert.isTrue(isFunction(callback), `addCallbackToNextTick() can only accept a function callback as first argument instead of ${callback}`);\n    if (nextTickCallbackQueue.length === 0) {\n        Promise.resolve().then(flushCallbackQueue);\n    }\n    // TODO: eventually, we might want to have priority when inserting callbacks\n    ArrayPush.call(nextTickCallbackQueue, callback);\n}\n\nconst CAMEL_REGEX = /-([a-z])/g;\nconst attrNameToPropNameMap = create(null);\n\nexport function getPropNameFromAttrName(attrName: string): string {\n    let propName = attrNameToPropNameMap[attrName];\n    if (!propName) {\n        propName = attrName.replace(CAMEL_REGEX, (g: string): string => g[1].toUpperCase());\n        attrNameToPropNameMap[attrName] = propName;\n    }\n    return propName;\n}\n\nconst CAPS_REGEX = /[A-Z]/g;\nimport {\n    HTMLPropertyNamesWithLowercasedReflectiveAttributes,\n} from \"./dom\";\n\n/**\n * This dictionary contains the mapping between property names\n * and the corresponding attribute name. This helps to trigger observable attributes.\n */\nconst propNameToAttributeNameMap = {\n    // these are exceptions to the rule that cannot be inferred via `CAPS_REGEX`\n    className: 'class',\n    htmlFor: 'for',\n};\n// Few more exceptions where the attribute name matches the property in lowercase.\nHTMLPropertyNamesWithLowercasedReflectiveAttributes.forEach((propName: string) => {\n    propNameToAttributeNameMap[propName] = propName.toLowerCase();\n});\n\nexport function getAttrNameFromPropName(propName: string): string {\n    let attrName = propNameToAttributeNameMap[propName];\n    if (!attrName) {\n        attrName = propName.replace(CAPS_REGEX, (match: string): string => '-' + match.toLowerCase());\n        propNameToAttributeNameMap[propName] = attrName;\n    }\n    return attrName;\n}\n\nexport function toAttributeValue(raw: any): string | null {\n    // normalizing attrs from compiler into HTML global attributes\n    if (raw === true) {\n        raw = '';\n    } else if (raw === false) {\n        raw = null;\n    }\n    return raw !== null ? raw + '' : null;\n}\n\nexport function noop() {}\n\nconst classNameToClassMap = create(null);\n\nexport function getMapFromClassName(className: string): HashTable<boolean> {\n    let map = classNameToClassMap[className];\n    if (map) {\n        return map;\n    }\n    map = {};\n    let start = 0;\n    let i, len = className.length;\n    for (i = 0; i < len; i++) {\n        if (className.charCodeAt(i) === SPACE_CHAR) {\n            if (i > start) {\n                map[className.slice(start, i)] = true;\n            }\n            start = i + 1;\n        }\n    }\n\n    if (i > start) {\n        map[className.slice(start, i)] = true;\n    }\n    classNameToClassMap[className] = map;\n    assert.block(() => {\n        // just to make sure that this object never changes as part of the diffing algo\n        freeze(map);\n    });\n    return map;\n}\n","import assert from \"./assert\";\nimport { isUndefined, isObject, isArray, create } from \"./language\";\n\nconst hooks = ['wiring', 'rehydrated', 'connected', 'disconnected', 'piercing'];\n\n/* eslint-disable */\nimport { Replicable } from \"./membrane\";\nexport type ServiceCallback = (component: Component, data: VNodeData, def: ComponentDef, context: HashTable<any>) => void;\nexport type MembranePiercingCallback = (component: Component, data: VNodeData, def: ComponentDef, context: HashTable<any>, target: Replicable, key: Symbol | string, value: any, callback: (newValue?: any) => void) => void;\nexport type ServiceDef = { wiring?: ServiceCallback; connected?: ServiceCallback; disconnected?: ServiceCallback; rehydrated?: ServiceCallback; piercing?: MembranePiercingCallback; [key: string]: ServiceCallback | MembranePiercingCallback | undefined; };\n/* eslint-enable */\n\nexport const Services: {\n  wiring?: ServiceCallback[];\n  connected?: ServiceCallback[];\n  disconnected?: ServiceCallback[];\n  rehydrated?: ServiceCallback[];\n  piercing?: MembranePiercingCallback[];\n  [key: string]: ServiceCallback[] | MembranePiercingCallback[] | undefined;\n} = create(null);\n\nexport function register(service: ServiceDef) {\n    assert.isTrue(isObject(service), `Invalid service declaration, ${service}: service must be an object`);\n    for (let i = 0; i < hooks.length; ++i) {\n        const hookName = hooks[i];\n        if (hookName in service) {\n            let l = Services[hookName];\n            if (isUndefined(l)) {\n                Services[hookName] = l = [];\n            }\n\n            l.push(service[hookName]);\n        }\n    }\n}\n\nexport function invokeServiceHook(vm: VM, cbs: Array<ServiceCallback>) {\n    assert.vm(vm);\n    assert.isTrue(isArray(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);\n    const { component, vnode: { data }, def, context } = vm;\n    for (let i = 0, len = cbs.length; i < len; ++i) {\n        cbs[i].call(undefined, component, data, def, context);\n    }\n}\n","import assert from \"./assert\";\nimport { invokeComponentMethod } from \"./invoker\";\nimport { clearListeners } from \"./component\";\nimport { rehydrate, addInsertionIndex, removeInsertionIndex } from \"./vm\";\nimport { addCallbackToNextTick, noop } from \"./utils\";\nimport { invokeServiceHook, Services } from \"./services\";\n\nfunction insert(vnode: ComponentVNode) {\n    assert.vnode(vnode);\n    const { vm } = vnode;\n    assert.vm(vm);\n    assert.isFalse(vm.idx, `${vm} is already inserted.`);\n    addInsertionIndex(vm);\n    const { isDirty, component: { connectedCallback } } = vm;\n    if (isDirty) {\n        // this code path guarantess that when patching the custom element for the first time,\n        // the body is computed only after the element is in the DOM, otherwise the hooks\n        // for any children's vnode are not going to be useful.\n        rehydrate(vm);\n    }\n    const { connected } = Services;\n    if (connected) {\n        addCallbackToNextTick((): void => invokeServiceHook(vm, connected));\n    }\n    if (connectedCallback && connectedCallback !== noop) {\n        addCallbackToNextTick((): void => invokeComponentMethod(vm, 'connectedCallback'));\n    }\n    console.log(`\"${vm}\" was inserted.`);\n}\n\nfunction destroy(vnode: ComponentVNode) {\n    assert.vnode(vnode);\n    const { vm } = vnode;\n    assert.vm(vm);\n    assert.isTrue(vm.idx, `${vm} is not inserted.`);\n    removeInsertionIndex(vm);\n    // just in case it comes back, with this we guarantee re-rendering it\n    vm.isDirty = true;\n    const { disconnected } = Services;\n    const { component: { disconnectedCallback } } = vm;\n    clearListeners(vm);\n    if (disconnected) {\n        addCallbackToNextTick((): void => invokeServiceHook(vm, disconnected));\n    }\n    if (disconnectedCallback && disconnectedCallback !== noop) {\n        addCallbackToNextTick((): void => invokeComponentMethod(vm, 'disconnectedCallback'));\n    }\n    console.log(`\"${vm}\" was destroyed.`);\n}\n\nfunction postpatch(oldVnode: VNode, vnode: ComponentVNode) {\n    assert.vnode(vnode);\n    assert.vm(vnode.vm);\n    if (vnode.vm.idx === 0) {\n        // when inserting a root element, or when reusing a DOM element for a new\n        // component instance, the insert() hook is never called because the element\n        // was already in the DOM before creating the instance, and diffing the\n        // vnode, for that, we wait until the patching process has finished, and we\n        // use the postpatch() hook to trigger the connectedCallback logic.\n        insert(vnode);\n        // Note: we don't have to worry about destroy() hook being called before this\n        // one because they never happen in the same patching mechanism, only one\n        // of them is called. In the case of the insert() hook, we use the value of `idx`\n        // to dedupe the calls since they both can happen in the same patching process.\n    }\n}\n\nexport const lifeCycleHooks = {\n    insert,\n    destroy,\n    postpatch,\n}\n","import assert from \"./assert\";\nimport { lifeCycleHooks as hook } from \"./hook\";\nimport { isArray, create, isUndefined, isFunction, isObject, isString, toString, ArrayPush } from \"./language\";\nimport { vmBeingRendered, invokeComponentCallback } from \"./invoker\";\nimport { getMapFromClassName } from \"./utils\";\n\nconst CHAR_S = 115;\nconst CHAR_V = 118;\nconst CHAR_G = 103;\nconst EmptyData = create(null);\nconst NamespaceAttributeForSVG = 'http://www.w3.org/2000/svg';\n\nfunction addNS(data: any, children: Array<VNode> | undefined, sel: string | undefined) {\n    data.ns = NamespaceAttributeForSVG;\n    if (isUndefined(children) || sel === 'foreignObject') {\n        return;\n    }\n    const len = children.length;\n    for (let i = 0; i < len; ++i) {\n        const child = children[i];\n        let { data } = child;\n        if (data !== undefined) {\n            const grandChildren: Array<VNode> = child.children;\n            addNS(data, grandChildren, child.sel);\n        }\n    }\n}\n\n// [v]node node\nexport function v(sel: string | undefined, data: VNodeData | undefined, children: Array<VNode | string> | undefined, text?: string | number | undefined, elm?: Element | Text | undefined, Ctor?: Class<Component>): VNode {\n    data = data || EmptyData;\n    let { key } = data;\n    // Try to identify the owner, but for root elements and other special cases, we\n    // can just fallback to 0 which means top level creation.\n    const uid = vmBeingRendered ? vmBeingRendered.uid : 0;\n    const vnode: VNode = { sel, data, children, text, elm, key, Ctor, uid };\n    assert.block(function devModeCheck() {\n        // adding toString to all vnodes for debuggability\n        vnode.toString = (): string => `[object:vnode ${sel}]`;\n    });\n    return vnode;\n}\n\n// [h]tml node\nexport function h(sel: string, data: VNodeData, children: Array<any>): VNode {\n    assert.isTrue(isString(sel), `h() 1st argument sel must be a string.`);\n    assert.isTrue(isObject(data), `h() 2nd argument data must be an object.`);\n    assert.isTrue(isArray(children), `h() 3rd argument children must be an array.`);\n    // checking reserved internal data properties\n    assert.invariant(data.class === undefined, `vnode.data.class should be undefined when calling h().`);\n    const { classMap, className, style, styleMap } = data;\n    assert.isFalse(className && classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    data.class = classMap || (className && getMapFromClassName(className));\n    assert.isFalse(styleMap && style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n    assert.block(function devModeCheck () {\n        if (style && !isString(style)) {\n            assert.logWarning(`Invalid 'style' attribute passed to <${sel}> should be a string value, and will be ignored.`);\n        }\n    });\n    data.style = styleMap || (style && style + '');\n    assert.block(function devModeCheck() {\n        children.forEach((vnode) => {\n            if (vnode === null) {\n                return;\n            }\n            assert.vnode(vnode);\n        });\n    });\n    if (sel.length === 3 && sel.charCodeAt(0) === CHAR_S && sel.charCodeAt(1) === CHAR_V && sel.charCodeAt(2) === CHAR_G) {\n        addNS(data, children, sel);\n    }\n    return v(sel, data, children);\n}\n\n// [c]ustom element node\nexport function c(sel: string, Ctor: Class<Component>, data: VNodeData): VNode {\n    // The compiler produce AMD modules that do not support circular dependencies\n    // We need to create an indirection to circumvent those cases.\n    // We could potentially move this check to the definition\n    if (Ctor.__circular__) {\n        Ctor = Ctor();\n    }\n\n    assert.isTrue(isString(sel), `c() 1st argument sel must be a string.`);\n    assert.isTrue(isFunction(Ctor), `c() 2nd argument Ctor must be a function.`);\n    assert.isTrue(isObject(data), `c() 3nd argument data must be an object.`);\n        // checking reserved internal data properties\n    assert.invariant(data.class === undefined, `vnode.data.class should be undefined when calling c().`);\n    const { key, slotset, styleMap, style, attrs, on, className, classMap, props: _props } = data;\n    assert.isTrue(arguments.length < 4, `Compiler Issue: Custom elements expect up to 3 arguments, received ${arguments.length} instead.`);\n    data = { hook, key, slotset, attrs, on, _props };\n    assert.isFalse(className && classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    data.class = classMap || (className && getMapFromClassName(className));\n    assert.isFalse(styleMap && style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n    assert.block(function devModeCheck () {\n        if (style && !isString(style)) {\n            assert.logWarning(`Invalid 'style' attribute passed to <${sel}> should be a string value, and will be ignored.`);\n        }\n    });\n    data.style = styleMap || (style && style + '');\n    return v(sel, data, [], undefined, undefined, Ctor);\n}\n\n// [i]terable node\nexport function i(items: Array<any>, factory: Function): Array<VNode> {\n    const len = (items && items.length) || 0; // supporting arrays and objects alike\n    const last = len ? (len - 1) : 0;\n    const list: Array<VNode> = [];\n    for (let i = 0; i < len; i += 1) {\n        const vnode = factory(items[i], i, i === 0, i === last);\n        if (isArray(vnode)) {\n            ArrayPush.apply(list, vnode);\n        } else {\n            ArrayPush.call(list, vnode);\n        }\n        assert.block(function devModeCheck() {\n            const vnodes = isArray(vnode) ? vnode : [vnode];\n            vnodes.forEach((vnode: VNode | any) => {\n                if (vnode && isObject(vnode) && vnode.sel && vnode.Ctor && isUndefined(vnode.key)) {\n                    // TODO - it'd be nice to log the owner component rather than the iteration children\n                    assert.logWarning(`Missing \"key\" attribute in iteration with child \"${toString(vnode.Ctor.name)}\", index ${i} of ${len}. Instead set a unique \"key\" attribute value on all iteration children so internal state can be preserved during rehydration.`);\n                }\n            });\n        });\n    }\n    return list;\n}\n\n/**\n * [f]lattening\n */\nexport function f(items: Array<any>): Array<any> {\n    assert.isTrue(isArray(items), 'flattening api can only work with arrays.');\n    const len = items.length;\n    const flattened: Array<VNode|null|number|string> = [];\n    for (let i = 0; i < len; i += 1) {\n        const item = items[i];\n        if (isArray(item)) {\n            ArrayPush.apply(flattened, item);\n        } else {\n            ArrayPush.call(flattened, item);\n        }\n    }\n    return flattened;\n}\n\n// [t]ext node\nexport function t(value: string | number): VNode {\n    return v(undefined, undefined, undefined, value);\n}\n\n// [d]ynamic value to produce a text vnode\nexport function d(value: any): VNode | null {\n    if (value === undefined || value === null) {\n        return null;\n    }\n    return v(undefined, undefined, undefined, value);\n}\n\n// [b]ind function\nexport function b(fn: EventListener): EventListener {\n    assert.vm(vmBeingRendered);\n    function handler(event: Event) {\n        // TODO: only if the event is `composed` it can be dispatched\n        invokeComponentCallback(handler.vm, handler.fn, handler.vm.component, [event]);\n    }\n    handler.vm = vmBeingRendered;\n    handler.fn = fn;\n    return handler;\n}\n","export default function compat(fn: () => void) {\n    fn();\n}\n","import assert from \"./assert\";\nimport { ArrayMap, isArray, isNull } from \"./language\";\nimport { XProxy } from \"./xproxy\";\n\n/*eslint-disable*/\nexport type ReplicableFunction = (...args: Array<any>) => any;\nexport type Replicable = Object | ReplicableFunction;\n\nexport type ReplicaFunction = (...args: Array<any>) => Replica | String | Number | Boolean | null | undefined;\nexport type Replica = Object | ReplicaFunction;\n\nexport interface MembraneHandler {\n    get(membrane: Membrane, target: Replicable, key: string | Symbol): any;\n    set(membrane: Membrane, target: Replicable, key: string | Symbol, newValue: any): boolean;\n    deleteProperty(membrane: Membrane, target: Replicable, key: string | Symbol): boolean;\n    apply(membrane: Membrane, targetFn: ReplicableFunction, thisArg: any, argumentsList: Array<any>): any;\n    construct(membrane: Membrane, targetFn: ReplicableFunction, argumentsList: Array<any>, newTarget: any): any;\n}\n/*eslint-enable*/\n\nexport const TargetSlot = Symbol();\nexport const MembraneSlot = Symbol();\n\nfunction isReplicable(value: any): boolean {\n    const type = typeof value;\n    return value && (type === 'object' || type === 'function');\n}\n\nexport function getReplica(membrane: Membrane, value: Replicable | any): Replica | any {\n    if (isNull(value)) {\n        return value;\n    }\n    value = unwrap(value);\n    if (!isReplicable(value)) {\n        return value;\n    }\n    assert.isTrue(membrane instanceof Membrane, `getReplica() first argument must be a membrane.`);\n    let { cells } = membrane;\n    const r = cells.get(value);\n    if (r) {\n        return r;\n    }\n    const replica: Replica = new XProxy(value, (membrane as ProxyHandler<Replicable>)); // eslint-disable-line no-undef\n    cells.set(value, replica);\n    return replica;\n}\n\nexport class Membrane {\n    handler: MembraneHandler; // eslint-disable-line no-undef\n    cells: WeakMap<Replicable, Replica>; // eslint-disable-line no-undef\n    constructor(handler: MembraneHandler) {\n        this.handler = handler;\n        this.cells = new WeakMap();\n    }\n    get(target: Replicable, key: string | Symbol): any {\n        if (key === TargetSlot) {\n            return target;\n        } else if (key === MembraneSlot) {\n            return this;\n        }\n        return this.handler.get(this, target, key);\n    }\n    set(target: Replicable, key: string | Symbol, newValue: any): boolean {\n        return this.handler.set(this, target, key, newValue);\n    }\n    deleteProperty(target: Replicable, key: string | Symbol): boolean {\n        if (key === TargetSlot) {\n            return false;\n        }\n        return this.handler.deleteProperty(this, target, key);\n    }\n    apply(target: ReplicableFunction, thisArg: any, argumentsList: Array<any>): any {\n        thisArg = unwrap(thisArg);\n        argumentsList = unwrap(argumentsList);\n        if (isArray(argumentsList)) {\n            argumentsList = ArrayMap.call(argumentsList, unwrap);\n        }\n        return this.handler.apply(this, target, thisArg, argumentsList);\n    }\n    construct(target: ReplicableFunction, argumentsList: Array<any>, newTarget: any): any {\n        argumentsList = unwrap(argumentsList);\n        if (isArray(argumentsList)) {\n            argumentsList = ArrayMap.call(argumentsList, unwrap);\n        }\n        return this.handler.construct(this, target, argumentsList, newTarget);\n    }\n}\n\nexport function unwrap(replicaOrAny: Replica | any): Replicable | any {\n    return (replicaOrAny && replicaOrAny[TargetSlot]) || replicaOrAny;\n}\n","import compat from \"./compat\";\nimport assert from \"./assert\";\nimport { unwrap, MembraneSlot, TargetSlot } from \"./membrane\";\nimport { isObject, isFunction, ArraySlice, create, getPrototypeOf, setPrototypeOf, isArray, keys, getOwnPropertyNames, assign, hasOwnProperty } from \"./language\";\n\n/*eslint-disable*/\nimport { ReplicableFunction, Replicable, Replica, Membrane } from \"./membrane\";\n\ntype RevokeFn = () => void;\n\ninterface RevocableProxy<T> {\n    proxy: T;\n    revoke: RevokeFn;\n}\n\ninterface CompatProxyHandler<T extends object> {\n    get(target: T, p: PropertyKey, receiver: any): any;\n    set(target: T, p: PropertyKey, value: any, receiver: any): boolean;\n    apply(target: T, thisArg: any, argArray?: any): any;\n    construct(target: T, argArray: any, newTarget?: any): object;\n}\n\ninterface CompatProxyConstructor {\n    revocable<T extends object>(target: T, handler: CompatProxyHandler<T>): RevocableProxy<T>;\n    new <T extends object>(target: T, handler: CompatProxyHandler<T>): T;\n}\n/*eslint-enable*/\n\nfunction getLinkedMembrane(replicaOrAny: Replica | any): Membrane | undefined {\n    const target = unwrap(replicaOrAny);\n    if (target !== replicaOrAny) {\n        return (replicaOrAny as Replica)[MembraneSlot];\n    }\n}\n\nlet lastRevokeFn: RevokeFn;\n\nconst ProxyCompat: CompatProxyConstructor = function Proxy(target: Replicable, handler: CompatProxyHandler<Replicable>): Replica {\n    const targetIsFunction = isFunction(target);\n    const targetIsArray = isArray(target);\n    assert.invariant(isObject(target) || targetIsFunction, `Cannot create proxy with a non-object as target`);\n    assert.invariant(isObject(handler), `new Proxy expects the second argument to a CompatProxyHandler`);\n    const { get, set, apply, construct } = handler;\n    assert.invariant(isFunction(get) && isFunction(set) && isFunction(apply) && isFunction(construct), `CompatProxyHandler requires get, set, apply and construct traps to be defined.`);\n\n    // Construct revoke function, and set lastRevokeFn so that Proxy.revocable can steal it.\n    // The caller might get the wrong revoke function if a user replaces or wraps XProxy\n    // to call itself, but that seems unlikely especially when using the polyfill.\n    let throwRevoked = function (trap: string) {}; // eslint-disable-line no-unused-vars\n    lastRevokeFn = function () {\n        throwRevoked = function (trap: string) {\n            throw new TypeError(`Cannot perform '${trap}' on a proxy that has been revoked`);\n        };\n    };\n\n    // Define proxy as Object, or Function (if either it's callable, or apply is set).\n    let proxy = this; // reusing the already created object, eventually the prototype will be resetted\n    if (targetIsFunction) {\n        proxy = function Proxy() {\n            const usingNew = (this && this.constructor === proxy);\n            const args = ArraySlice.call(arguments);\n            throwRevoked(usingNew ? 'construct' : 'apply');\n\n            if (usingNew) {\n                return construct.call(handler, target, args, this);\n            } else {\n                return apply.call(handler, target, this, args);\n            }\n        };\n    }\n\n    function linkProperty(target: Replicable, handler: CompatProxyHandler<Replicable>, key: string | Symbol, enumerable: boolean) {\n        // arrays are usually mutable, but objects are not... normally, in compat mode they will use the accessor keys\n        // instead of interacting with the object directly, but if they bypass that for some reason, having the right\n        // value for configurable helps to detect those early errors.\n        const configurable = targetIsArray;\n        const desc = {\n            enumerable,\n            configurable,\n            get: () => {\n                throwRevoked('get');\n                return get.call(handler, target, key);\n            },\n            set: (value: any): any => {\n                throwRevoked('set');\n                const result = set.call(handler, target, key, value);\n                if (result === false) {\n                    throw new TypeError(`'set' on proxy: trap returned falsish for property '${key}'`);\n                }\n            },\n        };\n        Object.defineProperty(proxy, key, desc);\n    }\n\n    // Clone enumerable properties\n    for (let key in target) {\n        linkProperty(target, handler, key, true);\n    }\n\n    // Set the prototype, or clone all prototype methods (always required if a getter is provided).\n    const proto = getPrototypeOf(target);\n    setPrototypeOf(proxy, proto);\n\n    if (targetIsArray) {\n        linkProperty(target, handler, 'length', false);\n    }\n\n    linkProperty(target, handler, MembraneSlot, false);\n    linkProperty(target, handler, TargetSlot, false);\n\n    return proxy;\n};\n\nProxyCompat.revocable = function (target: Replicable, handler: CompatProxyHandler<Replicable>): RevocableProxy<any> {\n    const p = new XProxy(target, handler);\n    return {\n        proxy: p,\n        revoke: lastRevokeFn,\n    };\n};\n\nfunction getKeyCompat(replicaOrAny: Replica | any, key: any): any {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    return membrane ? membrane.get(unwrap(replicaOrAny), key) : replicaOrAny[key];\n}\n\nfunction callKeyCompat(replicaOrAny: Replica | any, key: any, ...args: any[]): any {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    const context = membrane ? unwrap(replicaOrAny) : replicaOrAny;\n    const fn = membrane ? membrane.get(context, key) : replicaOrAny[key];\n    return fn.apply(replicaOrAny, args);\n}\n\nfunction setKeyCompat(replicaOrAny: Replica | any, key: string | Symbol, newValue: any, originalReturnValue?: any): any {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    if (membrane) {\n        membrane.set(unwrap(replicaOrAny), key, newValue);\n    } else {\n        // non-proxified assignment\n        replicaOrAny[key] = newValue;\n    }\n    return arguments.length === 4 ? originalReturnValue : newValue;\n}\n\nfunction deleteKeyCompat(replicaOrAny: Replica | any, key: string | Symbol) {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    if (membrane) {\n        membrane.deleteProperty(unwrap(replicaOrAny), key);\n        return;\n    }\n    // non-profixied delete\n    delete replicaOrAny[key];\n}\n\nfunction inKeyCompat(replicaOrAny: Replica | any, key: string | Symbol): boolean {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    if (membrane) {\n        return membrane.has(unwrap(replicaOrAny), key);\n    }\n    return key in replicaOrAny;\n}\n\nfunction iterableKeyCompat(replicaOrAny: Replica | any): any[] {\n    const membrane = getLinkedMembrane(replicaOrAny);\n    const target = membrane ? unwrap(replicaOrAny) : replicaOrAny;\n    const keyedObj = create(null);\n    for (let i in target) {\n        keyedObj[i] = void 0;\n    }\n    return keyedObj;\n}\n\n// transpilation\n// 1. member expressions e.g.: `obj.x.y.z` => `getKey(obj, 'x', 'y', 'z')`\n// 2. assignment of member expressions e.g.: `obj.x.y.z = 1;` => `setKey(getKey(obj, 'x', 'y'), 'z', 1)`\n// 3. delete operator e.g.: `delete obj.x.y.z` => `deleteKey(getKey(obj, 'x', 'y'), 'z')`\n// 4. in operator e.g.: `\"z\" in obj.x.y` => `inKey(getKey(obj, 'x', 'y'), 'z')`\n// 5. for in operator `for (let i in obj)` => `for (let i in iterableKey(obj))`\n\n// patches\n// [*] Object.prototype.hasOwnProperty should be patched as a general rule\n// [ ] Object.propertyIsEnumerable should be patched\n// [*] Array.isArray\n\nfunction compatIsArray(replicaOrAny: Replica | any): boolean {\n    return isArray(unwrap(replicaOrAny));\n}\n\nfunction compatKeys(replicaOrAny: Replica | any): Array<string | Symbol> {\n    return keys(unwrap(replicaOrAny));\n}\n\nfunction compatGetOwnPropertyNames(replicaOrAny: Replica | any): Array<string> {\n    return getOwnPropertyNames(unwrap(replicaOrAny));\n}\n\nfunction compatHasOwnProperty(key: string | Symbol): boolean {\n    const replicaOrAny: Replica | any = this;\n    return hasOwnProperty.call(unwrap(replicaOrAny), key);\n}\n\nfunction compatAssign(replicaOrAny: Replica | any): Replica | any {\n    if (replicaOrAny == null) { // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    const to = Object(unwrap(replicaOrAny));\n\n    for (var index = 1; index < arguments.length; index++) {\n        const nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n            const iterator = unwrap(nextSource);\n            for (let nextKey in iterator) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (hasOwnProperty.call(iterator, nextKey)) {\n                    setKey(to, nextKey, getKey(nextSource, nextKey));\n                }\n            }\n        }\n    }\n    return to;\n}\n\n// trap `preventExtensions` can be covered by a patched version of:\n// [ ] Object.preventExtensions()\n// [ ] Reflect.preventExtensions()\n\n// trap `getOwnPropertyDescriptor` can be covered by a patched version of:\n// [ ] Object.getOwnPropertyDescriptor()\n// [ ] Reflect.getOwnPropertyDescriptor()\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/defineProperty\n// trap `defineProperty` can be covered by a patched version of:\n// [ ] Object.defineProperty()\n// [ ] Reflect.defineProperty()\n\n\n// trap `deleteProperty` can be covered by the transpilation and the patched version of:\n// [ ] Reflect.deleteProperty()\n\n// trap `ownKeys` can be covered by a patched version of:\n// [*] Object.getOwnPropertyNames()\n// [ ] Object.getOwnPropertySymbols()\n// [*] Object.keys()\n// [ ] Reflect.ownKeys()\n\n// trap `isExtensible` can be covered by a patched version of:\n// [ ] Object.isExtensible()\n// [ ] Reflect.isExtensible()\n\n// trap `setPrototypeOf` can be covered by a patched version of:\n// [ ] Object.setPrototypeOf()\n// [ ] Reflect.setPrototypeOf()\n\nexport let XProxy: CompatProxyConstructor = typeof Proxy !== \"undefined\" ? Proxy : undefined;\nexport let getKey;\nexport let callKey;\nexport let setKey;\nexport let deleteKey;\nexport let inKey;\nexport let iterableKey;\n\n// enable/disable is meant to be used by our test infrastructure only\nexport function enableCompatMode() {\n    XProxy = ProxyCompat;\n    getKey = getKeyCompat;\n    callKey = callKeyCompat;\n    setKey = setKeyCompat;\n    deleteKey = deleteKeyCompat;\n    inKey = inKeyCompat;\n    iterableKey = iterableKeyCompat;\n    Array.isArray = compatIsArray;\n    assign(Object, {\n        keys: compatKeys,\n        getOwnPropertyNames: compatGetOwnPropertyNames,\n        assign: compatAssign,\n    })\n    assign(Object.prototype, {\n        hasOwnProperty: compatHasOwnProperty,\n    })\n}\n\nexport function disableCompatMode() {\n    XProxy = Proxy;\n    getKey = setKey = deleteKey = inKey = iterableKey = undefined;\n    Array.isArray = isArray;\n    assign(Object, {\n        keys,\n        getOwnPropertyNames,\n        assign,\n    });\n    assign(Object.prototype, {\n        hasOwnProperty,\n    })\n}\n\n// initialization\ncompat(() => {\n    enableCompatMode();\n});\n","import assert from \"./assert\";\nimport * as api from \"./api\";\nimport { isArray, isFunction, isObject, create, ArrayIndexOf, toString, hasOwnProperty } from \"./language\";\nimport { XProxy } from \"./xproxy\";\n\nconst EmptySlots: Slotset = create(null);\n\nfunction getSlotsetValue(slotset: Slotset, slotName: string): Array<VNode> {\n    assert.isTrue(isObject(slotset), `Invalid slotset value ${toString(slotset)}`);\n    // TODO: mark slotName as reactive\n    return slotset && slotset[slotName];\n}\n\nconst slotsetProxyHandler: ProxyHandler<Slotset> = {\n    get: (slotset: Slotset, key: string): any => getSlotsetValue(slotset, key),\n    set: (): boolean => {\n        assert.logError(`$slotset object cannot be mutated from template.`);\n        return false;\n    },\n    deleteProperty: (): boolean => {\n        assert.logError(`$slotset object cannot be mutated from template.`);\n        return false;\n    },\n    apply(/*target: any, thisArg: any, argArray?: any*/) {\n        assert.fail(`invalid call invocation from slotset`);\n    },\n    construct(/*target: any, argArray: any, newTarget?: any*/) {\n        assert.fail(`invalid construction invocation from slotset`);\n    },\n};\n\nfunction validateSlots(vm: VM, html: any) {\n    let { cmpSlots = EmptySlots } = vm;\n    const { slots = [] } = html;\n    for (let slotName in cmpSlots) {\n        if (ArrayIndexOf.call(slots, slotName) === -1) {\n            // TODO: this should never really happen because the compiler should always validate\n            console.warn(`Ignoring unknown provided slot name \"${slotName}\" in ${vm}. This is probably a typo on the slot attribute.`);\n        }\n    }\n}\n\nfunction validateFields(vm: VM, html: any) {\n    let { component } = vm;\n    // validating identifiers used by template that should be provided by the component\n    const { ids = [] } = html;\n    ids.forEach((propName: string) => {\n        if (!(propName in component)) {\n            console.warn(`The template rendered by ${vm} references \\`this.${propName}\\`, which is not declared. This is likely a typo in the template.`);\n        } else if (hasOwnProperty.call(component, propName)) {\n            assert.fail(`${component}'s template is accessing \\`this.${toString(propName)}\\` directly, which is considered a private field. Instead access it via a getter or make it reactive by moving it to \\`this.state.${toString(propName)}\\`.`);\n        }\n    });\n}\n\n\nfunction validateTemplate(vm: VM, html: any) {\n    validateSlots(vm, html);\n    validateFields(vm, html);\n}\n\nexport function evaluateTemplate(vm: VM, html: any): Array<VNode|null> {\n    assert.vm(vm);\n    assert.isTrue(isFunction(html), `evaluateTemplate() second argument must be a function instead of ${html}`);\n    // TODO: add identity to the html functions\n    let { component, context, cmpSlots = EmptySlots, cmpTemplate } = vm;\n    // reset the cache momizer for template when needed\n    if (html !== cmpTemplate) {\n        context.tplCache = create(null);\n        vm.cmpTemplate = html;\n        assert.block(function devModeCheck() {\n            validateTemplate(vm, html);\n        });\n    }\n    assert.isTrue(isObject(context.tplCache), `vm.context.tplCache must be an object associated to ${cmpTemplate}.`);\n    const { proxy: slotset, revoke: slotsetRevoke } = XProxy.revocable(cmpSlots, slotsetProxyHandler);\n    let vnodes = html.call(undefined, api, component, slotset, context.tplCache);\n    assert.invariant(isArray(vnodes), `Compiler should produce html functions that always return an array.`);\n    slotsetRevoke();\n    return vnodes;\n}\n","import assert from \"./assert\";\nimport { isFunction, isUndefined, isPromise } from \"./language\";\nimport { evaluateTemplate } from \"./template\";\nimport { rehydrate } from \"./vm\";\n\nfunction attemptToEvaluateResolvedTemplate(vm: VM, html: Template | undefined, originalPromise: Promise<Template | undefined>) {\n    let { context } = vm;\n    if (originalPromise !== context.tplPromise) {\n        // resolution of an old promise that is not longer relevant, ignoring it.\n        return;\n    }\n    if (isFunction(html)) {\n        context.tplResolvedValue = html;\n        assert.block(function devModeCheck() {\n            if (html === vm.cmpTemplate) {\n                assert.logError(`component ${vm.component} is returning a new promise everytime the render() method is invoked, even though the promise resolves to the same template ${html}. You should cache the promise outside of the render method, and return the same promise everytime, otherwise you will incurr in some performance penalty.`);\n            }\n        });\n        // forcing the vm to be dirty so it can render its content.\n        vm.isDirty = true;\n        rehydrate(vm);\n    } else if (!isUndefined(html)) {\n        assert.fail(`The template rendered by ${vm} must return an imported template tag (e.g.: \\`import html from \"./mytemplate.html\"\\`) or undefined, instead, it has returned ${html}.`);\n    }\n    // if the promise resolves to `undefined`, do nothing...\n}\n\nexport function deferredTemplate(vm: VM, html: Promise<Template | undefined>): Array<VNode> {\n    assert.vm(vm);\n    assert.isTrue(isPromise(html), `deferredTemplate() second argument must be a promise instead of ${html}`);\n    let { context } = vm;\n    const { tplResolvedValue, tplPromise } = context;\n    if (html !== tplPromise) {\n        context.tplPromise = html;\n        context.tplResolvedValue = undefined;\n        html.then((fn) => attemptToEvaluateResolvedTemplate(vm, fn, html));\n    } else if (tplResolvedValue) {\n        // if multiple invokes to render() return the same promise, we can rehydrate using the\n        // underlaying resolved value of that promise.\n        return evaluateTemplate(vm, tplResolvedValue);\n    }\n    return [];\n}\n","import assert from \"./assert\";\nimport {\n    currentContext,\n    establishContext,\n} from \"./context\";\nimport { evaluateTemplate } from \"./template\";\nimport { deferredTemplate } from \"./defer\";\nimport { isUndefined, isFunction, isPromise } from \"./language\";\n\nexport let isRendering: boolean = false;\nexport let vmBeingRendered: VM|null = null;\n\nexport function invokeComponentCallback(vm: VM, fn: () => any, fnCtx: any, args?: Array<any>): any {\n    const { context } = vm;\n    const ctx = currentContext;\n    establishContext(context);\n    let result, error;\n    try {\n        // TODO: membrane proxy for all args that are objects\n        result = fn.apply(fnCtx, args);\n    } catch (e) {\n        error = e;\n    }\n    establishContext(ctx);\n    if (error) {\n        throw error; // rethrowing the original error after restoring the context\n    }\n    return result;\n}\n\nexport function invokeComponentMethod(vm: VM, methodName: string, args?: Array<any>): any {\n    const { component } = vm;\n    return invokeComponentCallback(vm, component[methodName], component, args);\n}\n\nexport function invokeComponentConstructor(vm: VM, Ctor: Class<Component>): Component {\n    const { context } = vm;\n    const ctx = currentContext;\n    establishContext(context);\n    let component, error;\n    try {\n        component = new Ctor();\n    } catch (e) {\n        error = e;\n    }\n    establishContext(ctx);\n    if (error) {\n        throw error; // rethrowing the original error after restoring the context\n    }\n    return component;\n}\n\nexport function invokeComponentRenderMethod(vm: VM): Array<VNode> {\n    const { component, context } = vm;\n    const ctx = currentContext;\n    establishContext(context);\n    const isRenderingInception = isRendering;\n    const vmBeingRenderedInception = vmBeingRendered;\n    isRendering = true;\n    vmBeingRendered = vm;\n    let result, error;\n    try {\n        const html = component.render();\n        if (isFunction(html)) {\n            result = evaluateTemplate(vm, html);\n        } else if (isPromise(html)) {\n            result = deferredTemplate(vm, html);\n        } else if (!isUndefined(html)) {\n            assert.fail(`The template rendered by ${vm} must return an imported template tag (e.g.: \\`import html from \"./mytemplate.html\"\\`) or undefined, instead, it has returned ${html}.`);\n        }\n    } catch (e) {\n        error = e;\n    }\n    isRendering = isRenderingInception;\n    vmBeingRendered = vmBeingRenderedInception;\n    establishContext(ctx);\n    if (error) {\n        throw error; // rethrowing the original error after restoring the context\n    }\n    return result || [];\n}\n\nexport function invokeComponentAttributeChangedCallback(vm: VM, attrName: string, oldValue: any, newValue: any) {\n    const { component, context } = vm;\n    const { attributeChangedCallback } = component;\n    if (isUndefined(attributeChangedCallback)) {\n        return;\n    }\n    const ctx = currentContext;\n    establishContext(context);\n    let error;\n    try {\n        component.attributeChangedCallback(attrName, oldValue, newValue);\n    } catch (e) {\n        error = e;\n    }\n    establishContext(ctx);\n    if (error) {\n        throw error; // rethrowing the original error after restoring the context\n    }\n}\n","import assert from \"./assert\";\nimport { scheduleRehydration } from \"./vm\";\nimport { markComponentAsDirty } from \"./component\";\nimport { isUndefined, toString, create, ArrayIndexOf, ArrayPush } from \"./language\";\n\nconst TargetToReactiveRecordMap: Map<Object, ReactiveRecord> = new WeakMap();\n\nexport function notifyListeners(target: Object, key: string | Symbol) {\n    const reactiveRecord = TargetToReactiveRecordMap.get(target);\n    if (reactiveRecord) {\n        const value = reactiveRecord[key];\n        if (value) {\n            const len = value.length;\n            for (let i = 0; i < len; i += 1) {\n                const vm = value[i];\n                assert.vm(vm);\n                console.log(`Marking ${vm} as dirty: property \"${toString(key)}\" of ${toString(target)} was set to a new value.`);\n                if (!vm.isDirty) {\n                    markComponentAsDirty(vm);\n                    console.log(`Scheduling ${vm} for rehydration due to mutation.`);\n                    scheduleRehydration(vm);\n                }\n            }\n        }\n    }\n}\n\nexport function subscribeToSetHook(vm: VM, target: Object, key: string | Symbol) {\n    assert.vm(vm);\n    let reactiveRecord: ReactiveRecord = TargetToReactiveRecordMap.get(target);\n    if (isUndefined(reactiveRecord)) {\n        const newRecord: ReactiveRecord = create(null);\n        reactiveRecord = newRecord;\n        TargetToReactiveRecordMap.set(target, newRecord);\n    }\n    let value = reactiveRecord[key];\n    if (isUndefined(value)) {\n        value = [];\n        reactiveRecord[key] = value;\n    }\n    if (ArrayIndexOf.call(value, vm) === -1) {\n        ArrayPush.call(value, vm);\n        // we keep track of the sets that vm is listening from to be able to do some clean up later on\n        ArrayPush.call(vm.deps, value);\n    }\n}\n","import assert from \"./assert\";\nimport {\n    subscribeToSetHook,\n    notifyListeners,\n} from \"./watcher\";\nimport {\n    isRendering,\n    vmBeingRendered,\n} from \"./invoker\";\nimport { toString, isArray, isObject, isNull } from \"./language\";\nimport { XProxy } from \"./xproxy\";\nimport { TargetSlot, MembraneSlot, unwrap } from \"./membrane\";\n\n/*eslint-disable*/\nimport { Replicable, Replica } from \"./membrane\";\n/*eslint-enable*/\n\nconst ReplicableToReplicaMap: WeakMap<Replicable, Replica> = new WeakMap();\n\nfunction propertyGetter(target: Object, key: string | Symbol): any {\n    if (key === TargetSlot) {\n        return target;\n    } else if (key === MembraneSlot) {\n        return propertyProxyHandler;\n    }\n    const value = target[key];\n    if (isRendering && vmBeingRendered) {\n        subscribeToSetHook(vmBeingRendered, target, key);\n    }\n    return (value && isObject(value)) ? getPropertyProxy(value) : value;\n}\n\nfunction propertySetter(target: Object, key: string | Symbol, value: any): boolean {\n    if (isRendering) {\n        assert.logError(`Setting property \"${toString(key)}\" of ${toString(target)} during the rendering process of ${vmBeingRendered} is invalid. The render phase must have no side effects on the state of any component.`);\n        return false;\n    }\n    const oldValue = target[key];\n    if (oldValue !== value) {\n        target[key] = value;\n        notifyListeners(target, key);\n    } else if (key === 'length' && isArray(target)) {\n        // fix for issue #236: push will add the new index, and by the time length\n        // is updated, the internal length is already equal to the new length value\n        // therefore, the oldValue is equal to the value. This is the forking logic\n        // to support this use case.\n        notifyListeners(target, key);\n    }\n    return true;\n}\n\nfunction propertyDelete(target: Object, key: string | Symbol): boolean {\n    delete target[key];\n    notifyListeners(target, key);\n    return true;\n}\n\nconst propertyProxyHandler: ProxyHandler<Replicable> = {\n    get: propertyGetter,\n    set: propertySetter,\n    deleteProperty: propertyDelete,\n    apply(target: any/*, thisArg: any, argArray?: any*/) {\n        assert.fail(`invalid call invocation for property proxy ${target}`);\n    },\n    construct(target: any/*, argArray: any, newTarget?: any*/) {\n        assert.fail(`invalid construction invocation for property proxy ${target}`);\n    },\n};\n\nexport function getPropertyProxy(value: Replicable | any): Replica | any {\n    assert.isTrue(isObject(value), \"perf-optimization: avoid calling this method for non-object value.\");\n\n    // TODO: Provide a holistic way to deal with built-ins, right now we just care ignore Date\n    if (isNull(value) || value.constructor === Date) {\n        return value;\n    }\n\n    value = unwrap(value);\n\n    assert.block(function devModeCheck() {\n        const isNode = value instanceof Node;\n        assert.invariant(!isNode, `Do not store references to DOM Nodes. Instead use \\`this.querySelector()\\` and \\`this.querySelectorAll()\\` to find the nodes when needed.`);\n    });\n\n    let proxy = ReplicableToReplicaMap.get(value);\n    if (proxy) {\n        return proxy;\n    }\n    proxy = new XProxy(value, propertyProxyHandler);\n    ReplicableToReplicaMap.set(value, proxy);\n    return proxy;\n}\n","import assert from \"./assert\";\nimport { OwnerKey } from \"./vm\";\nimport { Services } from \"./services\";\nimport { getReplica, Membrane } from \"./membrane\";\n\n/* eslint-disable */\nimport { Replicable, ReplicableFunction, MembraneHandler } from \"./membrane\";\n/* eslint-enable */\n\nfunction piercingHook(membrane: Membrane, target: Replicable, key: string | Symbol, value: any): any {\n    const { handler: { vm } } = membrane;\n    assert.vm(vm);\n    const { piercing } = Services;\n    if (piercing) {\n        const { component, vnode: { data }, def, context } = vm;\n        let result = value;\n        let next = true;\n        const callback = (newValue?: any) => {\n            next = false;\n            result = newValue;\n        };\n        for (let i = 0, len = piercing.length; next && i < len; ++i) {\n            piercing[i].call(undefined, component, data, def, context, target, key, value, callback);\n        }\n        return result === value ? getReplica(membrane, result) : result;\n    }\n}\n\nexport class PiercingMembraneHandler implements MembraneHandler {\n    vm: VM; // eslint-disable-line no-undef\n    constructor(vm: VM) {\n        assert.vm(vm);\n        this.vm = vm;\n    }\n    get(membrane: Membrane, target: Replicable, key: string | Symbol): any {\n        if (key === OwnerKey) {\n            return undefined;\n        }\n        let value = target[key];\n        return piercingHook(membrane, target, key, value);\n    }\n    set(membrane: Membrane, target: Replicable, key: string, newValue: any): boolean {\n        target[key] = newValue;\n        return true;\n    }\n    deleteProperty(membrane: Membrane, target: Replicable, key: string | Symbol): boolean {\n        delete target[key];\n        return true;\n    }\n    apply(membrane: Membrane, targetFn: ReplicableFunction, thisArg: any, argumentsList: Array<any>): any {\n        return getReplica(membrane, targetFn.apply(thisArg, argumentsList));\n    }\n    construct(membrane: Membrane, targetFn: ReplicableFunction, argumentsList: Array<any>, newTarget: any): any {\n        assert.isTrue(newTarget, `construct handler expects a 3rd argument with a newly created object that will be ignored in favor of the wrapped constructor.`);\n        return getReplica(membrane, new targetFn(...argumentsList));\n    }\n}\n\nexport function pierce(vm: VM, value: Replicable | any): any {\n    assert.vm(vm);\n    let { membrane } = vm;\n    if (!membrane) {\n        const handler = new PiercingMembraneHandler(vm);\n        membrane = new Membrane(handler);\n        vm.membrane = membrane;\n    }\n    return getReplica(membrane, value);\n}\n","import assert from \"./assert\";\nimport {\n    invokeComponentConstructor,\n    invokeComponentRenderMethod,\n    isRendering,\n    vmBeingRendered,\n    invokeComponentAttributeChangedCallback,\n    invokeComponentMethod,\n    invokeComponentCallback,\n} from \"./invoker\";\nimport { notifyListeners } from \"./watcher\";\nimport { isArray, isUndefined, create, toString, ArrayPush, ArrayIndexOf, ArraySplice, isObject, defineProperties } from \"./language\";\nimport { addCallbackToNextTick, getAttrNameFromPropName, noop } from \"./utils\";\nimport { getPropertyProxy } from \"./properties\";\nimport { invokeServiceHook, Services } from \"./services\";\nimport { pierce } from \"./piercing\";\n\nexport let vmBeingConstructed: VM | null = null;\n\nexport function isBeingConstructed(vm: VM): boolean {\n    assert.vm(vm);\n    return vmBeingConstructed === vm;\n}\n\nexport function createComponent(vm: VM, Ctor: Class<Component>) {\n    assert.vm(vm);\n    // create the component instance\n    const vmBeingConstructedInception = vmBeingConstructed;\n    vmBeingConstructed = vm;\n    const component = invokeComponentConstructor(vm, Ctor);\n    vmBeingConstructed = vmBeingConstructedInception;\n    assert.isTrue(vm.component === component, `Invalid construction for ${vm}, maybe you are missing the call to super() on classes extending Element.`);\n}\n\nexport function linkComponent(vm: VM) {\n    assert.vm(vm);\n    const {\n        vnode: { elm },\n        component,\n        def: { methods: publicMethodsConfig, props: publicProps }\n    } = vm;\n    const descriptors: PropertyDescriptorMap = {};\n    // expose public methods as props on the Element\n    for (let key in publicMethodsConfig) {\n        const getter = (function (component: Component, key: string, ...args: any[]): any {\n            return component[key].apply(component, args);\n        }).bind(undefined, component, key);\n        descriptors[key] = {\n            get: () => getter\n        };\n    }\n    for (let key in publicProps) {\n        let {\n            getter,\n        } = publicProps[key];\n        if (isUndefined(getter)) {\n            // default getter\n            getter = (function runGetter(vm: VM, key: string): any {\n                return this[key];\n            }).bind(component, vm, key);\n        } else {\n            // original getter\n            getter = getter.bind(component);\n        }\n\n        const setter = (function runSetter(vm: VM, key: string, value: any): any {\n            if (vm.vnode.isRoot) {\n                // logic for setting new properties of the element directly from the DOM\n                // will only be allowed for root elements created via createElement()\n                // proxifying before storing it is a must for public props\n                value = isObject(value) ? getPropertyProxy(value) : value;\n                updateComponentProp(vm, key, value);\n            } else {\n                assert.logError(`Invalid attempt to set property ${key} from ${vm} to a new value. This property was decorated with @api, and can only be changed via the template.`);\n            }\n        }).bind(component, vm, key);\n\n        descriptors[key] = {\n            get: getter,\n            set: setter,\n        };\n    }\n    defineProperties(elm, descriptors);\n    // wiring service\n    const { def: { wire } } = vm;\n    if (wire) {\n        const { wiring } = Services;\n        if (wiring) {\n            invokeServiceHook(vm, wiring);\n        }\n    }\n}\n\nexport function clearListeners(vm: VM) {\n    assert.vm(vm);\n    const { deps } = vm;\n    const len = deps.length;\n    if (len) {\n        for (let i = 0; i < len; i += 1) {\n            const set = deps[i];\n            const pos = ArrayIndexOf.call(deps[i], vm);\n            assert.invariant(pos > -1, `when clearing up deps, the vm must be part of the collection.`);\n            ArraySplice.call(set, pos, 1);\n        }\n        deps.length = 0;\n    }\n}\n\nexport function updateComponentProp(vm: VM, propName: string, newValue: any) {\n    assert.vm(vm);\n    const { cmpProps, def: { props: publicProps, observedAttrs } } = vm;\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n    const propDef: PropDef = publicProps[propName];\n    if (isUndefined(propDef)) {\n        // TODO: this should never really happen because the compiler should always validate\n        console.warn(`Ignoring unknown public property ${propName} of ${vm}. This is likely a typo on the corresponding attribute \"${getAttrNameFromPropName(propName)}\".`);\n        return;\n    }\n    assert.isFalse(propDef.getter && !propDef.setter, `Invalid attempt to set a new value for property ${propName} of ${vm} that does not has a setter.`);\n    const { setter } = propDef;\n    if (setter) {\n        setter.call(vm.component, newValue);\n        return;\n    }\n    let oldValue = cmpProps[propName];\n    if (oldValue !== newValue) {\n        assert.block(function devModeCheck() {\n            if (isObject(newValue)) {\n                assert.invariant(getPropertyProxy(newValue) === newValue, `updateComponentProp() should always received proxified object values instead of ${newValue} in ${vm}.`);\n            }\n        });\n        cmpProps[propName] = newValue;\n        const attrName = getAttrNameFromPropName(propName);\n        if (attrName in observedAttrs) {\n            invokeComponentAttributeChangedCallback(vm, attrName, oldValue, newValue);\n        }\n        notifyListeners(cmpProps, propName);\n    }\n}\n\nexport function resetComponentProp(vm: VM, propName: string) {\n    assert.vm(vm);\n    const { cmpProps, def: { props: publicPropsConfig, observedAttrs } } = vm;\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n    const propDef: PropDef = publicPropsConfig[propName];\n    if (isUndefined(propDef)) {\n        // not need to log the error here because we will do it on updateComponentProp()\n        return;\n    }\n    let newValue = undefined;\n    const { setter } = propDef;\n    if (setter) {\n        setter.call(vm.component, newValue);\n        return;\n    }\n    let oldValue = cmpProps[propName];\n    if (oldValue !== newValue) {\n        cmpProps[propName] = newValue;\n        const attrName = getAttrNameFromPropName(propName);\n        if (attrName in observedAttrs) {\n            invokeComponentAttributeChangedCallback(vm, attrName, oldValue, newValue);\n        }\n        notifyListeners(cmpProps, propName);\n    }\n}\n\nexport function createComponentListener(): EventListener {\n    return function handler(event: Event) {\n        dispatchComponentEvent(handler.vm, event);\n    }\n}\n\nexport function addComponentEventListener(vm: VM, eventName: string, newHandler: EventListener) {\n    assert.vm(vm);\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding a new event listener for \"${eventName}\".`);\n    let { cmpEvents, cmpListener } = vm;\n    if (isUndefined(cmpEvents)) {\n        // this piece of code must be in sync with modules/component-events\n        vm.cmpEvents = cmpEvents = create(null);\n        vm.cmpListener = cmpListener = createComponentListener();\n        cmpListener.vm = vm;\n    }\n    if (isUndefined(cmpEvents[eventName])) {\n        cmpEvents[eventName] = [];\n        // this is not only an optimization, it is also needed to avoid adding the same\n        // listener twice when the initial diffing algo kicks in without an old vm to track\n        // what was already added to the DOM.\n        if (!vm.isDirty) {\n            // if the element is already in the DOM and rendered, we intentionally make a sync mutation\n            // here and also keep track of the mutation for a possible rehydration later on without having\n            // to rehydrate just now.\n            const { vnode: { elm } } = vm;\n            elm.addEventListener(eventName, cmpListener, false);\n        }\n    }\n    assert.block(function devModeCheck() {\n        if (cmpEvents[eventName] && ArrayIndexOf.call(cmpEvents[eventName], newHandler) !== -1) {\n            assert.logWarning(`${vm} has duplicate listeners for event \"${eventName}\". Instead add the event listener in the connectedCallback() hook.`);\n        }\n    });\n    ArrayPush.call(cmpEvents[eventName], newHandler);\n}\n\nexport function removeComponentEventListener(vm: VM, eventName: string, oldHandler: EventListener) {\n    assert.vm(vm);\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by removing an event listener for \"${eventName}\".`);\n    const { cmpEvents } = vm;\n    if (cmpEvents) {\n        const handlers = cmpEvents[eventName];\n        const pos = handlers && ArrayIndexOf.call(handlers, oldHandler);\n        if (handlers && pos > -1) {\n            ArraySplice.call(cmpEvents[eventName], pos, 1);\n            return;\n        }\n    }\n    assert.block(function devModeCheck() {\n        assert.logWarning(`Did not find event listener ${oldHandler} for event \"${eventName}\" on ${vm}. Instead only remove an event listener once.`);\n    });\n}\n\nexport function dispatchComponentEvent(vm: VM, event: Event): boolean {\n    assert.vm(vm);\n    assert.invariant(event instanceof Event, `dispatchComponentEvent() must receive an event instead of ${event}`);\n    const { cmpEvents, component } = vm;\n    const { type } = event;\n    assert.invariant(cmpEvents && cmpEvents[type] && cmpEvents[type].length, `dispatchComponentEvent() should only be invoked if there is at least one listener in queue for ${type} on ${vm}.`);\n    const handlers = cmpEvents[type];\n    let uninterrupted = true;\n    const { stopImmediatePropagation } = event;\n    event.stopImmediatePropagation = function() {\n        uninterrupted = false;\n        stopImmediatePropagation.call(this);\n    }\n    const e = pierce(vm, event);\n    for (let i = 0, len = handlers.length; uninterrupted && i < len; i += 1) {\n        // TODO: only if the event is `composed` it can be dispatched\n        invokeComponentCallback(vm, handlers[i], component, [e]);\n    }\n    // restoring original methods\n    event.stopImmediatePropagation = stopImmediatePropagation;\n}\n\nexport function addComponentSlot(vm: VM, slotName: string, newValue: Array<VNode>) {\n    assert.vm(vm);\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of slot ${slotName} in ${vm}`);\n    assert.isTrue(isArray(newValue) && newValue.length > 0, `Slots can only be set to a non-empty array, instead received ${toString(newValue)} for slot ${slotName} in ${vm}.`)\n    let { cmpSlots } = vm;\n    let oldValue = cmpSlots && cmpSlots[slotName];\n    // TODO: hot-slots names are those slots used during the last rendering cycle, and only if\n    // one of those is changed, the vm should be marked as dirty.\n\n    // TODO: Issue #133\n    if (!isArray(newValue)) {\n        newValue = undefined;\n    }\n    if (oldValue !== newValue) {\n        if (isUndefined(cmpSlots)) {\n            vm.cmpSlots = cmpSlots = create(null);\n        }\n        cmpSlots[slotName] = newValue;\n        console.log(`Marking ${vm} as dirty: a new value for slot \"${slotName}\" was added.`);\n        if (!vm.isDirty) {\n            markComponentAsDirty(vm);\n        }\n    }\n}\n\nexport function removeComponentSlot(vm: VM, slotName: string) {\n    assert.vm(vm);\n    assert.invariant(!isRendering, `${vmBeingRendered}.render() method has side effects on the state of slot ${slotName} in ${vm}`);\n    // TODO: hot-slots names are those slots used during the last rendering cycle, and only if\n    // one of those is changed, the vm should be marked as dirty.\n    const { cmpSlots } = vm;\n    if (cmpSlots && cmpSlots[slotName]) {\n        cmpSlots[slotName] = undefined; // delete will de-opt the cmpSlots, better to set it to undefined\n        console.log(`Marking ${vm} as dirty: the value of slot \"${slotName}\" was removed.`);\n        if (!vm.isDirty) {\n            markComponentAsDirty(vm);\n        }\n    }\n}\n\nexport function renderComponent(vm: VM) {\n    assert.vm(vm);\n    assert.invariant(vm.isDirty, `${vm} is not dirty.`);\n    console.log(`${vm} is being updated.`);\n    clearListeners(vm);\n    const vnodes = invokeComponentRenderMethod(vm);\n    vm.isDirty = false;\n    vm.fragment = vnodes;\n    assert.invariant(isArray(vnodes), `${vm}.render() should always return an array of vnodes instead of ${vnodes}`);\n    const { component: { renderedCallback } } = vm;\n    if (renderedCallback && renderedCallback !== noop) {\n        addCallbackToNextTick((): void => invokeComponentMethod(vm, 'renderedCallback'));\n    }\n    const { rehydrated } = Services;\n    if (rehydrated) {\n        addCallbackToNextTick((): void => invokeServiceHook(vm, rehydrated));\n    }\n}\n\nexport function markComponentAsDirty(vm: VM) {\n    assert.vm(vm);\n    assert.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the componet is already dirty.`);\n    assert.isFalse(isRendering, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);\n    vm.isDirty = true;\n}\n","import assert from \"./assert\";\nimport { ViewModelReflection } from \"./html-element\";\nimport { ArrayFilter, defineProperty } from \"./language\";\nimport { isBeingConstructed } from \"./component\";\nimport { OwnerKey, isNodeOwnedByVM } from \"./vm\";\nimport { register } from \"./services\";\nimport { pierce } from \"./piercing\";\n\nconst { querySelector, querySelectorAll } = Element.prototype;\n\nfunction getLinkedElement(root: Root): HTMLElement {\n    return root[ViewModelReflection].vnode.elm;\n}\n\nexport function shadowRootQuerySelector (shadowRoot: ShadowRoot, selector: string): MembraneObject | null {\n    const vm = shadowRoot[ViewModelReflection];\n    assert.isFalse(isBeingConstructed(vm), `this.root.querySelector() cannot be called during the construction of the custom element for ${this} because no content has been rendered yet.`);\n    const elm = getLinkedElement(shadowRoot);\n    return pierce(vm, elm).querySelector(selector);\n}\n\nexport function shadowRootQuerySelectorAll (shadowRoot: ShadowRoot, selector: string): MembraneObject {\n    const vm = shadowRoot[ViewModelReflection];\n    assert.isFalse(isBeingConstructed(vm), `this.root.querySelectorAll() cannot be called during the construction of the custom element for ${this} because no content has been rendered yet.`);\n    const elm = getLinkedElement(shadowRoot);\n    return pierce(vm, elm).querySelectorAll(selector);\n}\n\nexport function Root(vm: VM): ShadowRoot {\n    assert.vm(vm);\n    defineProperty(this, ViewModelReflection, {\n        value: vm,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n    });\n}\n\nRoot.prototype = {\n    get mode(): string {\n        return 'closed';\n    },\n    get host(): Component {\n        return this[ViewModelReflection].component;\n    },\n    querySelector(selector: string): MembraneObject | null {\n        const node = shadowRootQuerySelector(this, selector);\n        assert.block(() => {\n            const vm = this[ViewModelReflection];\n            if (!node && vm.component.querySelector(selector)) {\n                assert.logWarning(`this.root.querySelector() can only return elements from the template declaration of ${vm.component}. It seems that you are looking for elements that were passed via slots, in which case you should use this.querySelector() instead.`);\n            }\n        });\n        return node;\n    },\n    querySelectorAll(selector: string): MembraneObject {\n        const nodeList = shadowRootQuerySelectorAll(this, selector);\n        assert.block(() => {\n            const vm = this[ViewModelReflection];\n            if (nodeList.length === 0 && vm.component.querySelectorAll(selector).length) {\n                assert.logWarning(`this.root.querySelectorAll() can only return elements from template declaration of ${vm.component}. It seems that you are looking for elements that were passed via slots, in which case you should use this.querySelectorAll() instead.`);\n            }\n        });\n        return nodeList;\n    },\n    toString(): string {\n        const vm = this[ViewModelReflection];\n        return `Current ShadowRoot for ${vm.component}`;\n    }\n};\n\nfunction getFirstMatch(vm: VM, elm: Element, selector: string): Node | null {\n    const nodeList = querySelectorAll.call(elm, selector);\n    // search for all, and find the first node that is owned by the VM in question.\n    for (let i = 0, len = nodeList.length; i < len; i += 1) {\n        if (isNodeOwnedByVM(vm, nodeList[i])) {\n            return pierce(vm, nodeList[i]);\n        }\n    }\n    return null;\n}\n\nfunction getAllMatches(vm: VM, elm: Element, selector: string): NodeList {\n    const nodeList = querySelectorAll.call(elm, selector);\n    const filteredNodes = ArrayFilter.call(nodeList, (node: Node): boolean => isNodeOwnedByVM(vm, node));\n    return pierce(vm , filteredNodes);\n}\n\nfunction isParentNodeKeyword(key: string | Symbol): boolean {\n    return (key === 'parentNode' || key === 'parentElement');\n}\n\n// Registering a service to enforce the shadowDOM semantics via the Raptor membrane implementation\nregister({\n    piercing(component: Component, data: VNodeData, def: ComponentDef, context: HashTable<any>, target: Replicable, key: Symbol | string, value: any, callback: (value?: any) => void) {\n        const vm: VM = component[ViewModelReflection];\n        const { elm } = (vm.vnode as ComponentVNode); // eslint-disable-line no-undef\n        if (value) {\n            if (value === querySelector) {\n                // TODO: it is possible that they invoke the querySelector() function via call or apply to set a new context, what should\n                // we do in that case? Right now this is essentially a bound function, but the original is not.\n                return callback((selector: string): Node | null => getFirstMatch(vm, target, selector));\n            }\n            if (value === querySelectorAll) {\n                // TODO: it is possible that they invoke the querySelectorAll() function via call or apply to set a new context, what should\n                // we do in that case? Right now this is essentially a bound function, but the original is not.\n                return callback((selector: string): NodeList => getAllMatches(vm, target, selector));\n            }\n            if (isParentNodeKeyword(key)) {\n                if (value === elm) {\n                    // walking up via parent chain might end up in the shadow root element\n                    return callback(component.root);\n                } else if (target[OwnerKey] !== value[OwnerKey]) {\n                    // cutting out access to something outside of the shadow of the current target (usually slots)\n                    return callback();\n                }\n            }\n            if (value === elm) {\n                // prevent access to the original Host element\n                return callback(component);\n            }\n        }\n    }\n});\n","import assert from \"./assert\";\nimport { ClassList } from \"./class-list\";\nimport { Root, shadowRootQuerySelector, shadowRootQuerySelectorAll } from \"./root\";\nimport { vmBeingConstructed, isBeingConstructed, addComponentEventListener, removeComponentEventListener } from \"./component\";\nimport { ArrayFilter, isArray, freeze, seal, defineProperty, getOwnPropertyNames, isUndefined, isObject, create } from \"./language\";\nimport { getPropertyProxy } from \"./properties\";\nimport { GlobalHTMLProperties } from \"./dom\";\nimport { getPropNameFromAttrName, noop, toAttributeValue } from \"./utils\";\nimport { isRendering, vmBeingRendered } from \"./invoker\";\nimport { subscribeToSetHook, notifyListeners } from \"./watcher\";\nimport { wasNodePassedIntoVM } from \"./vm\";\nimport { pierce } from \"./piercing\";\n\nexport const ViewModelReflection = Symbol('internal');\n\nfunction getLinkedElement(cmp: ComponentElement): HTMLElement {\n    return cmp[ViewModelReflection].vnode.elm;\n}\n\nfunction querySelectorAllFromComponent(cmp: ComponentElement, selectors: string): NodeList {\n    const elm = getLinkedElement(cmp);\n    return elm.querySelectorAll(selectors);\n}\n\nexport function createPublicPropertyDescriptor(propName: string, originalPropertyDescriptor?: PropertyDescriptor): PropertyDescriptor {\n    function getter(): any {\n        const vm: VM = this[ViewModelReflection];\n        assert.vm(vm);\n        const { propName, origGetter } = getter;\n        if (isBeingConstructed(vm)) {\n            assert.logError(`${vm} constructor should not read the value of property \"${propName}\". The owner component has not yet set the value. Instead use the constructor to set default values for properties.`);\n            return;\n        }\n        if (origGetter) {\n            return origGetter.call(vm.component);\n        }\n        const { cmpProps } = vm;\n        if (isRendering) {\n            // this is needed because the proxy used by template is not sufficient\n            // for public props accessed from within a getter in the component.\n            subscribeToSetHook(vmBeingRendered, cmpProps, propName);\n        }\n        return cmpProps[propName];\n    }\n    getter.propName = propName;\n    getter.origGetter = originalPropertyDescriptor && originalPropertyDescriptor.get;\n\n    function setter(value: any) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        const { propName, origSetter } = setter;\n        if (!isBeingConstructed(vm)) {\n            assert.logError(`${vm} can only set a new value for property \"${propName}\" during construction.`);\n            return;\n        }\n        if (origSetter) {\n            origSetter.call(vm.component, value);\n            return;\n        }\n        const { cmpProps } = vm;\n        // proxifying before storing it is a must for public props\n        cmpProps[propName] = isObject(value) ? getPropertyProxy(value) : value;\n    }\n    setter.propName = propName;\n    setter.origSetter = originalPropertyDescriptor && originalPropertyDescriptor.set;\n\n    const descriptor: PropertyDescriptor = {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true,\n    };\n    return descriptor;\n}\n\n\nexport function createWiredPropertyDescriptor(propName: string): PropertyDescriptor {\n    function getter(): HashTable<any> {\n        const vm: VM = this[ViewModelReflection];\n        assert.vm(vm);\n        let { cmpWired } = vm;\n        if (isUndefined(cmpWired)) {\n            cmpWired = vm.cmpWired = getPropertyProxy(create(null)); // lazy creation of the value\n        }\n        let value = cmpWired[propName];\n        if (isRendering) {\n            // this is needed because the proxy used by template is not sufficient\n            // for public props accessed from within a getter in the component.\n            subscribeToSetHook(vmBeingRendered, cmpWired, propName);\n        }\n        return value;\n    }\n    function setter(value: any) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        if (!value || !isObject(value)) {\n            assert.logError(`${vm} failed to set new value into property \"${propName}\". It can only be set to an object.`);\n            return;\n        }\n        let { cmpWired } = vm;\n        if (isUndefined(cmpWired)) {\n            cmpWired = vm.cmpWired = getPropertyProxy(create(null)); // lazy creation of the value\n        }\n        cmpWired[propName] = isObject(value) ? getPropertyProxy(value) : value;\n        notifyListeners(cmpWired, propName);\n    }\n    const descriptor: PropertyDescriptor = {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true,\n    };\n    return descriptor;\n}\n\n// This should be as performant as possible, while any initialization should be done lazily\nfunction ComponentElement(): ComponentElement {\n    assert.vm(vmBeingConstructed, `Invalid construction.`);\n    assert.vnode(vmBeingConstructed.vnode, `Invalid construction.`);\n    const vnode = vmBeingConstructed.vnode;\n    assert.invariant(vnode.elm instanceof HTMLElement, `Component creation requires a DOM element to be associated to ${vnode}.`);\n    vmBeingConstructed.component = this;\n    this[ViewModelReflection] = vmBeingConstructed;\n}\n\nComponentElement.prototype = {\n    // Raptor.Element APIs\n    renderedCallback: noop,\n    render: noop,\n\n    // Web Component - The Good Parts\n    connectedCallback: noop,\n    disconnectedCallback: noop,\n\n    // HTML Element - The Good Parts\n    dispatchEvent(event: Event): boolean {\n        const elm = getLinkedElement(this);\n        assert.isFalse(isBeingConstructed(this[ViewModelReflection]), `this.dispatchEvent() should not be called during the construction of the custom element for ${this} because no one is listening for the event ${event} just yet.`);\n        // custom elements will rely on the DOM dispatchEvent mechanism\n        return elm.dispatchEvent(event);\n    },\n    addEventListener(type: string, listener: EventListener) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        assert.block(function devModeCheck() {\n            if (arguments.length > 2) {\n                // TODO: can we synthetically implement `passive` and `once`? Capture is probably ok not supporting it.\n                assert.logWarning(`this.addEventListener() on ${vm} does not support more than 2 arguments. Options to make the listener passive, once or capture are not allowed at the top level of the component's fragment.`);\n            }\n        });\n        addComponentEventListener(vm, type, listener);\n    },\n    removeEventListener(type: string, listener: EventListener) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        assert.block(function devModeCheck() {\n            if (arguments.length > 2) {\n                assert.logWarning(`this.removeEventListener() on ${vm} does not support more than 2 arguments. Options to make the listener passive or capture are not allowed at the top level of the component's fragment.`);\n            }\n        });\n        removeComponentEventListener(vm, type, listener);\n    },\n    getAttribute(attrName: string): string | null {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        const { vnode: { data: { attrs } } } = vm;\n        if (!attrName) {\n            if (arguments.length === 0) {\n                throw new TypeError(`Failed to execute \\`getAttribute\\` on ${vm}: 1 argument is required, got 0.`);\n            }\n            return null;\n        }\n        // logging errors for experimentals and special attributes\n        assert.block(function devModeCheck() {\n            const propName = getPropNameFromAttrName(attrName);\n            const { def: { props: publicPropsConfig } } = vm;\n            if (publicPropsConfig[propName]) {\n                throw new ReferenceError(`Attribute \"${attrName}\" corresponds to public property ${propName} from ${vm}. Instead use \\`this.${propName}\\`. Only use \\`getAttribute()\\` to access global HTML attributes.`);\n            } else if (GlobalHTMLProperties[propName] && GlobalHTMLProperties[propName].attribute) {\n                const { error, experimental } = GlobalHTMLProperties[propName];\n                if (error) {\n                    console.error(error);\n                } else if (experimental) {\n                    console.error(`Attribute \\`${attrName}\\` is an experimental attribute that is not standardized or supported by all browsers. Property \"${propName}\" and attribute \"${attrName}\" are ignored.`);\n                }\n            }\n        });\n        // normalizing attrs from compiler into HTML global attributes\n        let raw = attrs && attrName in attrs ? attrs[attrName] : null;\n        return toAttributeValue(raw);\n    },\n    getBoundingClientRect(): DOMRect {\n        const elm = getLinkedElement(this);\n        assert.isFalse(isBeingConstructed(this[ViewModelReflection]), `this.getBoundingClientRect() should not be called during the construction of the custom element for ${this} because the element is not yet in the DOM, instead, you can use it in one of the available life-cycle hooks.`);\n        return elm.getBoundingClientRect();\n    },\n    querySelector(selectors: string): Node | null {\n        const vm = this[ViewModelReflection];\n        assert.isFalse(isBeingConstructed(vm), `this.querySelector() cannot be called during the construction of the custom element for ${this} because no children has been added to this element yet.`);\n        const nodeList = querySelectorAllFromComponent(this, selectors);\n        for (let i = 0, len = nodeList.length; i < len; i += 1) {\n            if (wasNodePassedIntoVM(vm, nodeList[i])) {\n                // TODO: locker service might need to return a membrane proxy\n                return pierce(vm, nodeList[i]);\n            }\n        }\n        assert.block(() => {\n            if (shadowRootQuerySelector(this.root, selectors)) {\n                assert.logWarning(`this.querySelector() can only return elements that were passed into ${vm.component} via slots. It seems that you are looking for elements from your template declaration, in which case you should use this.root.querySelector() instead.`);\n            }\n        });\n\n        return null;\n    },\n    querySelectorAll(selectors: string): NodeList {\n        const vm = this[ViewModelReflection];\n        assert.isFalse(isBeingConstructed(vm), `this.querySelectorAll() cannot be called during the construction of the custom element for ${this} because no children has been added to this element yet.`);\n        const nodeList = querySelectorAllFromComponent(this, selectors);\n        // TODO: locker service might need to do something here\n        const filteredNodes = ArrayFilter.call(nodeList, (node: Node): boolean => wasNodePassedIntoVM(vm, node));\n        assert.block(() => {\n            if (filteredNodes.length === 0 && shadowRootQuerySelectorAll(this.root, selectors).length) {\n                assert.logWarning(`this.querySelectorAll() can only return elements that were passed into ${vm.component} via slots. It seems that you are looking for elements from your template declaration, in which case you should use this.root.querySelectorAll() instead.`);\n            }\n        });\n        return pierce(vm, filteredNodes);\n    },\n    get tagName(): string {\n        const elm = getLinkedElement(this);\n        return elm.tagName + ''; // avoiding side-channeling\n    },\n    get tabIndex(): number {\n        const elm = getLinkedElement(this);\n        return elm.tabIndex;\n    },\n    set tabIndex(value: number) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        assert.isFalse(isRendering, `Setting property \"tabIndex\" of ${toString(value)} during the rendering process of ${vmBeingRendered} is invalid. The render phase must have no side effects on the state of any component.`);\n\n        if (isBeingConstructed(vm)) {\n            assert.fail(`Setting property \"tabIndex\" during the construction process of ${vm} is invalid.`);\n            return;\n        }\n\n        const elm = getLinkedElement(this);\n        elm.tabIndex = value;\n    },\n    get classList(): DOMTokenList {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        let { classListObj } = vm;\n        // lazy creation of the ClassList Object the first time it is accessed.\n        if (isUndefined(classListObj)) {\n            vm.cmpClasses = {};\n            classListObj = new ClassList(vm);\n            vm.classListObj = classListObj;\n        }\n        return classListObj;\n    },\n    get root(): ShadowRoot {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        let { cmpRoot } = vm;\n        // lazy creation of the ShadowRoot Object the first time it is accessed.\n        if (isUndefined(cmpRoot)) {\n            cmpRoot = new Root(vm);\n            vm.cmpRoot = cmpRoot;\n        }\n        return cmpRoot;\n    },\n    get state(): HashTable<any> {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        let { cmpState } = vm;\n        if (isUndefined(cmpState)) {\n            cmpState = vm.cmpState = getPropertyProxy(create(null)); // lazy creation of the cmpState\n        }\n        return cmpState;\n    },\n    set state(newState: HashTable<any>) {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        if (!newState || !isObject(newState) || isArray(newState)) {\n            assert.logError(`${vm} failed to set new state to ${newState}. \\`this.state\\` can only be set to an object.`);\n            return;\n        }\n        vm.cmpState = getPropertyProxy(newState); // lazy creation of the cmpState\n    },\n    toString(): string {\n        const vm = this[ViewModelReflection];\n        assert.vm(vm);\n        const { vnode: { sel, data: { attrs } } } = vm;\n        const is = attrs && attrs.is;\n        return `<${sel}${ is ? ' is=\"${is}' : '' }>`;\n    },\n}\n\n// Global HTML Attributes\nassert.block(function devModeCheck() {\n\n    getOwnPropertyNames(GlobalHTMLProperties).forEach((propName: string) => {\n        if (propName in ComponentElement.prototype) {\n            return; // no need to redefine something that we are already exposing\n        }\n        defineProperty(ComponentElement.prototype, propName, {\n            get: function () {\n                const vm = this[ViewModelReflection];\n                assert.vm(vm);\n                const { error, attribute, readOnly, experimental } = GlobalHTMLProperties[propName];\n                const msg = [];\n                msg.push(`Accessing the global HTML property \"${propName}\" in ${vm} is disabled.`);\n                if (error) {\n                    msg.push(error);\n                } else {\n                    if (experimental) {\n                        msg.push(`This is an experimental property that is not standardized or supported by all browsers. Property \"${propName}\" and attribute \"${attribute}\" are ignored.`);\n                    }\n                    if (readOnly) {\n                        // TODO - need to improve this message\n                        msg.push(`Property is read-only.`);\n                    }\n                    if (attribute) {\n                        msg.push(`\"Instead access it via the reflective attribute \"${attribute}\" with one of these techniques:`);\n                        msg.push(`  * Use \\`this.getAttribute(\"${attribute}\")\\` to access the attribute value. This option is best suited for accessing the value in a getter during the rendering process.`);\n                        msg.push(`  * Declare \\`static observedAttributes = [\"${attribute}\"]\\` and use \\`attributeChangedCallback(attrName, oldValue, newValue)\\` to get a notification each time the attribute changes. This option is best suited for reactive programming, eg. fetching new data each time the attribute is updated.`);\n                    }\n                }\n                console.log(msg.join('\\n'));\n                return; // explicit undefined\n            },\n            enumerable: false,\n        })\n    });\n\n});\n\nfreeze(ComponentElement);\nseal(ComponentElement.prototype);\n\nexport { ComponentElement as Element };\n","/**\n * This module is responsible for producing the ComponentDef object that is always\n * accessible via `vm.def`. This is lazily created during the creation of the first\n * instance of a component class, and shared across all instances.\n *\n * This structure can be used to synthetically create proxies, and understand the\n * shape of a component. It is also used internally to apply extra optimizations.\n */\n\nimport assert from \"./assert\";\nimport {\n    assign,\n    freeze,\n    create,\n    ArrayIndexOf,\n    toString,\n    ArrayPush,\n    defineProperty,\n    getOwnPropertyDescriptor,\n    getOwnPropertyNames,\n    getPrototypeOf,\n    isString,\n    isFunction,\n    isUndefined,\n    isObject,\n} from \"./language\";\nimport { GlobalHTMLProperties } from \"./dom\";\nimport { Element, createPublicPropertyDescriptor, createWiredPropertyDescriptor } from \"./html-element\";\nimport { EmptyObject } from \"./utils\";\n\nconst CtorToDefMap: Map<any, ComponentDef> = new WeakMap();\n\nconst COMPUTED_GETTER_MASK = 1;\nconst COMPUTED_SETTER_MASK = 2;\n\nfunction isElementComponent(Ctor: any, protoSet?: Array<any>): boolean {\n    protoSet = protoSet || [];\n    if (!Ctor || ArrayIndexOf.call(protoSet, Ctor) >= 0) {\n        return false; // null, undefined, or circular prototype definition\n    }\n    const proto = getPrototypeOf(Ctor);\n    if (proto === Element) {\n        return true;\n    }\n    getComponentDef(proto); // ensuring that the prototype chain is already expanded\n    ArrayPush.call(protoSet, Ctor);\n    return isElementComponent(proto, protoSet);\n}\n\nfunction createComponentDef(Ctor: Class<Component>): ComponentDef {\n    assert.isTrue(isElementComponent(Ctor), `${Ctor} is not a valid component, or does not extends Element from \"engine\". You probably forgot to add the extend clause on the class declaration.`);\n    const name: string = Ctor.name;\n    assert.isTrue(name && isString(name), `${toString(Ctor)} should have a \"name\" property with string value, but found ${name}.`);\n    assert.isTrue(Ctor.constructor, `Missing ${name}.constructor, ${name} should have a \"constructor\" property.`);\n    let props = getPublicPropertiesHash(Ctor);\n    let methods = getPublicMethodsHash(Ctor);\n    let observedAttrs = getObservedAttributesHash(Ctor);\n    let wire = getWireHash(Ctor);\n\n    const proto = Ctor.prototype;\n    for (let propName in props) {\n        const propDef = props[propName];\n        // initializing getters and setters for each public prop on the target prototype\n        const descriptor = getOwnPropertyDescriptor(proto, propName);\n        const isComputed = descriptor && (isFunction(descriptor.get) || isFunction(descriptor.set));\n        assert.invariant(!descriptor || isComputed, `Invalid ${name}.prototype.${propName} definition, it cannot be a prototype definition if it is a public property. Instead use the constructor to define it.`);\n        const { config } = propDef;\n        if (COMPUTED_GETTER_MASK & config) {\n            assert.isTrue(isObject(descriptor) && isFunction(descriptor.get), `Missing getter for property ${propName} decorated with @api in ${name}`);\n            propDef.getter = descriptor.get;\n        }\n        if (COMPUTED_SETTER_MASK & config) {\n            assert.isTrue(isObject(descriptor) && isFunction(descriptor.set), `Missing setter for property ${propName} decorated with @api in ${name}`);\n            propDef.setter = descriptor.set;\n        }\n        defineProperty(proto, propName, createPublicPropertyDescriptor(propName, descriptor));\n    }\n\n    if (wire) {\n        for (let propName in wire) {\n            const descriptor = getOwnPropertyDescriptor(proto, propName);\n            // for decorated methods we need to do nothing\n            if (isUndefined(wire[propName].method)) {\n                // initializing getters and setters for each public prop on the target prototype\n                const isComputed = descriptor && (isFunction(descriptor.get) || isFunction(descriptor.set));\n                assert.invariant(!descriptor || isComputed, `Invalid ${name}.prototype.${propName} definition, it cannot be a prototype definition if it is a property decorated with the @wire decorator.`);\n                defineProperty(proto, propName, createWiredPropertyDescriptor(propName));\n            }\n        }\n    }\n\n    const superProto = getPrototypeOf(Ctor);\n    if (superProto !== Element) {\n        const superDef = getComponentDef(superProto);\n        props = assign(create(null), superDef.props, props);\n        methods = assign(create(null), superDef.methods, methods);\n        wire = (superDef.wire || wire) ? assign(create(null), superDef.wire, wire) : undefined;\n    }\n\n    const def: ComponentDef = {\n        name,\n        wire,\n        props,\n        methods,\n        observedAttrs,\n    };\n    assert.block(function devModeCheck() {\n        freeze(Ctor.prototype);\n        freeze(wire);\n        freeze(props);\n        freeze(methods);\n        freeze(observedAttrs);\n        for (let key in def) {\n            defineProperty(def, key, {\n                configurable: false,\n                writable: false,\n            });\n        }\n    });\n    return def;\n}\n\nfunction getWireHash(target: Object): HashTable<WireDef> | undefined {\n    const wire: HashTable = target.wire;\n    if (!wire || !getOwnPropertyNames(wire).length) {\n        return;\n    }\n\n    assert.block(function devModeCheck() {\n        // TODO: check that anything in `wire` is correctly defined in the prototype\n    });\n    return assign(create(null), wire);\n}\n\nfunction getPublicPropertiesHash(target: Object): HashTable<PropDef> {\n    const props: HashTable = target.publicProps;\n    if (!props || !getOwnPropertyNames(props).length) {\n        return EmptyObject;\n    }\n    return getOwnPropertyNames(props).reduce((propsHash: HashTable<PropDef>, propName: string): HashTable<PropDef> => {\n        assert.block(function devModeCheck() {\n            if (GlobalHTMLProperties[propName] && GlobalHTMLProperties[propName].attribute) {\n                const { error, attribute, experimental } = GlobalHTMLProperties[propName];\n                const msg = [];\n                if (error) {\n                    msg.push(error);\n                } else if (experimental) {\n                    msg.push(`\"${propName}\" is an experimental property that is not standardized or supported by all browsers. Property \"${propName}\" and attribute \"${attribute}\" are ignored.`);\n                } else {\n                    msg.push(`\"${propName}\" is a global HTML property. Instead access it via the reflective attribute \"${attribute}\" with one of these techniques:`);\n                    msg.push(`  * Use \\`this.getAttribute(\"${attribute}\")\\` to access the attribute value. This option is best suited for accessing the value in a getter during the rendering process.`);\n                    msg.push(`  * Declare \\`static observedAttributes = [\"${attribute}\"]\\` and use \\`attributeChangedCallback(attrName, oldValue, newValue)\\` to get a notification each time the attribute changes. This option is best suited for reactive programming, eg. fetching new data each time the attribute is updated.`);\n                }\n                console.error(msg.join('\\n'));\n            }\n        });\n\n        propsHash[propName] = assign({ config: 0 }, props[propName]);\n        return propsHash;\n    }, create(null));\n}\n\nfunction getPublicMethodsHash(target: Object): HashTable<number> {\n    const publicMethods = target.publicMethods;\n    if (!publicMethods || !publicMethods.length) {\n        return EmptyObject;\n    }\n    return publicMethods.reduce((methodsHash: HashTable<number>, methodName: string): HashTable => {\n        methodsHash[methodName] = 1;\n        assert.block(function devModeCheck() {\n            assert.isTrue(isFunction(target.prototype[methodName]), `Component \"${target.name}\" should have a method \\`${methodName}\\` instead of ${target.prototype[methodName]}.`);\n            freeze(target.prototype[methodName]);\n        });\n        return methodsHash;\n    }, create(null));\n}\n\nfunction getObservedAttributesHash(target: Object): HashTable<number> {\n    const observedAttributes = target.observedAttributes;\n    if (!observedAttributes || !observedAttributes.length) {\n        return EmptyObject;\n    }\n    return observedAttributes.reduce((observedAttributes: HashTable<number>, attrName: string): HashTable => {\n        observedAttributes[attrName] = 1;\n        return observedAttributes;\n    }, create(null));\n}\n\nexport function getComponentDef(Ctor: Class<Component>): ComponentDef {\n    let def = CtorToDefMap.get(Ctor);\n    if (def) {\n        return def;\n    }\n    def = createComponentDef(Ctor);\n    CtorToDefMap.set(Ctor, def);\n    return def;\n}\n","import assert from \"./assert\";\nimport { getComponentDef } from \"./def\";\nimport { createComponent, linkComponent } from \"./component\";\nimport { patch } from \"./patch\";\nimport { assign, isArray, toString, ArrayPush, isUndefined, keys } from \"./language\";\nimport { addCallbackToNextTick } from \"./utils\";\n\nlet idx: number = 0;\nlet uid: number = 0;\n\nexport const OwnerKey = Symbol('key');\n\nexport function addInsertionIndex(vm: VM) {\n    assert.vm(vm);\n    assert.invariant(vm.idx === 0, `${vm} is already locked to a previously generated idx.`);\n    vm.idx = ++idx;\n}\n\nexport function removeInsertionIndex(vm: VM) {\n    assert.vm(vm);\n    assert.invariant(vm.idx > 0, `${vm} is not locked to a previously generated idx.`);\n    vm.idx = 0;\n}\n\nexport function createVM(vnode: ComponentVNode) {\n    assert.vnode(vnode);\n    assert.invariant(vnode.elm instanceof HTMLElement, `VM creation requires a DOM element to be associated to vnode ${vnode}.`);\n    const { Ctor } = vnode;\n    const def = getComponentDef(Ctor);\n    console.log(`[object:vm ${def.name}] is being initialized.`);\n    uid += 1;\n    const vm: VM = {\n        uid,\n        idx: 0,\n        isScheduled: false,\n        isDirty: true,\n        def,\n        context: {},\n        cmpProps: {},\n        cmpWired: undefined,\n        cmpState: undefined,\n        cmpSlots: undefined,\n        cmpEvents: undefined,\n        cmpListener: undefined,\n        cmpClasses: undefined,\n        cmpTemplate: undefined,\n        cmpRoot: undefined,\n        classListObj: undefined,\n        component: undefined,\n        vnode,\n        // used to store the latest result of the render method\n        fragment: [],\n        // used to track down all object-key pairs that makes this vm reactive\n        deps: [],\n    };\n    assert.block(function devModeCheck() {\n        vm.toString = (): string => {\n            return `[object:vm ${def.name} (${vm.idx})]`;\n        };\n    });\n    vnode.vm = vm;\n    createComponent(vm, Ctor);\n    linkComponent(vm);\n    assert.block(function devModeCheck() {\n        const { component: { attributeChangedCallback }, def: { observedAttrs } } = vm;\n        if (observedAttrs.length && isUndefined(attributeChangedCallback)) {\n            console.warn(`${vm} has static observedAttributes set to [\"${keys(observedAttrs).join('\", \"')}\"] but it is missing the attributeChangedCallback() method to watch for changes on those attributes. Double check for typos on the name of the callback.`);\n        }\n    });\n    return vm;\n}\n\nexport function relinkVM(vm: VM, vnode: ComponentVNode) {\n    assert.vm(vm);\n    assert.vnode(vnode);\n    assert.isTrue(vnode.elm instanceof HTMLElement, `Only DOM elements can be linked to their corresponding component.`);\n    assert.invariant(vm.component, `vm.component is required to be defined before ${vm} gets linked to ${vnode}.`);\n    vnode.vm = vm;\n    vm.vnode = vnode;\n}\nexport function rehydrate(vm: VM) {\n    assert.vm(vm);\n    if (vm.idx && vm.isDirty) {\n        const { vnode } = vm;\n        assert.isTrue(vnode.elm instanceof HTMLElement, `rehydration can only happen after ${vm} was patched the first time.`);\n        assert.invariant(isArray(vnode.children), `Rendered ${vm}.children should always have an array of vnodes instead of ${toString(vnode.children)}`);\n        // when patch() is invoked from within the component life-cycle due to\n        // a dirty state, we create a new VNode (oldVnode) with the exact same data was used\n        // to patch this vnode the last time, mimic what happen when the\n        // owner re-renders, but we do so by keeping the vnode originally used by parent\n        // as the source of true, in case the parent tries to rehydrate against that one.\n        const oldVnode = assign({}, vnode);\n        vnode.children = [];\n        patch(oldVnode, vnode);\n    }\n    vm.isScheduled = false;\n}\n\nlet rehydrateQueue: Array<VM> = [];\n\nfunction flushRehydrationQueue() {\n    assert.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);\n    const vms: Array<VM> = rehydrateQueue.sort((a: VM, b: VM): boolean => a.idx > b.idx);\n    rehydrateQueue = []; // reset to a new queue\n    for (let i = 0, len = vms.length; i < len; i += 1) {\n        rehydrate(vms[i]);\n    }\n}\n\nexport function scheduleRehydration(vm: VM) {\n    assert.vm(vm);\n    if (!vm.isScheduled) {\n        vm.isScheduled = true;\n        if (rehydrateQueue.length === 0) {\n            addCallbackToNextTick(flushRehydrationQueue);\n        }\n        ArrayPush.call(rehydrateQueue, vm);\n    }\n}\n\nexport function isNodeOwnedByVM(vm: VM, node: Node): boolean {\n    assert.vm(vm);\n    assert.invariant(node instanceof Node, `isNodeOwnedByVM() should be called with a node as the second argument instead of ${node}`);\n    assert.childNode(vm.vnode.elm, node, `isNodeOwnedByVM() should never be called with a node that is not a child node of ${vm}`);\n    // @ts-ignore\n    return node[OwnerKey] === vm.uid;\n}\n\nexport function wasNodePassedIntoVM(vm: VM, node: Node): boolean {\n    assert.vm(vm);\n    assert.invariant(node instanceof Node, `isNodePassedToVM() should be called with a node as the second argument instead of ${node}`);\n    assert.childNode(vm.vnode.elm, node, `isNodePassedToVM() should never be called with a node that is not a child node of ${vm}`);\n    const { vnode: { uid: ownerUid } } = vm;\n    // TODO: we need to walk the parent path here as well, in case they passed it via slots multiple times\n    // @ts-ignore\n    return node[OwnerKey] === ownerUid;\n}\n","import { createVM, relinkVM } from \"../vm\";\nimport assert from \"../assert\";\nimport { isUndefined } from \"../language\";\n\n// this hook will set up the component instance associated to the new vnode,\n// and link the new vnode with the corresponding component\nfunction initializeComponent(oldVnode: ComponentVNode, vnode: ComponentVNode) {\n    const { Ctor } = vnode;\n    if (isUndefined(Ctor)) {\n        return;\n    }\n    /**\n     * The reason why we do the initialization here instead of prepatch or any other hook\n     * is because the creation of the component does require the element to be available.\n     */\n    assert.invariant(vnode.elm, `${vnode}.elm should be ready.`);\n    if (oldVnode.vm && oldVnode.Ctor === Ctor) {\n        assert.invariant(vnode.elm === oldVnode.elm, `${vnode}.elm should always match the oldVnode's   element.`);\n        relinkVM(oldVnode.vm, vnode);\n    } else {\n        createVM(vnode);\n    }\n    assert.invariant(vnode.vm.component, `vm ${vnode.vm} should have a component and element associated to it.`);\n}\n\nexport default {\n    create: initializeComponent,\n    update: initializeComponent,\n};\n","import {\n    resetComponentProp,\n    updateComponentProp,\n} from \"../component\";\nimport { assign, isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\nfunction syncProps(oldVnode: VNode, vnode: ComponentVNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n\n    let { data: { _props: oldProps } } = oldVnode;\n    let { data: { _props: newProps } } = vnode;\n\n    // infuse key-value pairs from _props into the component\n    if (oldProps !== newProps && (oldProps || newProps)) {\n        let key: string, cur: any;\n        oldProps = oldProps || EmptyObject;\n        newProps = newProps || EmptyObject;\n        // removed props should be reset in component's props\n        for (key in oldProps) {\n            if (!(key in newProps)) {\n                resetComponentProp(vm, key);\n            }\n        }\n\n        // new or different props should be set in component's props\n        for (key in newProps) {\n            cur = newProps[key];\n            if (!(key in oldProps) || oldProps[key] != cur) {\n                updateComponentProp(vm, key, cur);\n            }\n        }\n    }\n\n    // Note: _props, which comes from api.c()'s data.props, is only used to populate\n    //       public props, and any other alien key added to it by the compiler will be\n    //       ignored, and a warning is shown.\n}\n\nexport default {\n    create: syncProps,\n    update: syncProps,\n};\n","import { invokeComponentAttributeChangedCallback } from \"../invoker\";\nimport { isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\nfunction observeAttributes(oldVnode: VNode, vnode: ComponentVNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n    const { def: { observedAttrs } } = vm;\n    if (observedAttrs.length === 0) {\n        return; // nothing to observe\n    }\n\n    let { data: { attrs: oldAttrs } } = oldVnode;\n    let { data: { attrs: newAttrs } } = vnode;\n\n    if (oldAttrs === newAttrs || (isUndefined(oldAttrs) && isUndefined(oldAttrs))) {\n        return;\n    }\n\n    // infuse key-value pairs from _props into the component\n    let key: string, cur: any;\n    oldAttrs = oldAttrs || EmptyObject;\n    newAttrs = newAttrs || EmptyObject;\n    // removed props should be reset in component's props\n    for (key in oldAttrs) {\n        if (key in observedAttrs && !(key in newAttrs)) {\n            invokeComponentAttributeChangedCallback(vm, key, oldAttrs[key], null);\n        }\n    }\n\n    // new or different props should be set in component's props\n    for (key in newAttrs) {\n        if (key in observedAttrs) {\n            cur = newAttrs[key];\n            if (!(key in oldAttrs) || oldAttrs[key] != cur) {\n                invokeComponentAttributeChangedCallback(vm, key, oldAttrs[key], cur);\n            }\n        }\n    }\n}\n\nexport default {\n    create: observeAttributes,\n    update: observeAttributes,\n};\n","import { isUndefined } from \"../language\";\nimport { createComponentListener } from \"../component\";\nimport { EmptyObject } from \"../utils\";\n\nfunction removeAllCmpEventListeners(vnode: VNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n    const { cmpEvents: on, listener } = vm;\n    if (on && listener) {\n        const { elm } = vnode;\n        let name;\n        for (name in on) {\n            elm.removeEventListener(name, listener, false);\n        }\n        vm.listener = undefined;\n    }\n}\n\nfunction updateCmpEventListeners(oldVnode: VNode, vnode: VNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n    const { vm: oldVm } = oldVnode;\n    if (oldVm === vm) {\n        return;\n    }\n\n    const oldOn = (oldVm && oldVm.cmpEvents) || EmptyObject;\n    const { cmpEvents: on = EmptyObject } = vm;\n\n    if (oldOn === on) {\n        return;\n    }\n\n    const { elm } = vnode;\n    const { elm: oldElm } = oldVnode;\n    const listener = vm.cmpListener = (oldVm && oldVm.cmpListener) || createComponentListener();\n    listener.vm = vm;\n\n    let name;\n    for (name in on) {\n        if (isUndefined(oldOn[name])) {\n            elm.addEventListener(name, listener, false);\n        }\n    }\n    for (name in oldOn) {\n        if (isUndefined(on[name])) {\n            oldElm.removeEventListener(name, listener, false);\n        }\n    }\n}\n\n\n\nconst eventListenersModule: Module = {\n    create: updateCmpEventListeners,\n    update: updateCmpEventListeners,\n    destroy: removeAllCmpEventListeners\n};\nexport default eventListenersModule;\n","import { isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\nfunction syncClassNames(oldVnode: VNode, vnode: ComponentVNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n\n    const { vm: oldVm } = oldVnode;\n    if (oldVm === vm) {\n        return;\n    }\n\n    const oldClass = (oldVm && oldVm.cmpClasses) || EmptyObject;\n    const { cmpClasses: klass = EmptyObject } = vm;\n\n    if (oldClass === klass) {\n        return;\n    }\n\n    const { elm, data: { class: ownerClass = EmptyObject } } = vnode;\n\n    let name: string;\n    for (name in oldClass) {\n        // remove only if it was removed from within the instance and it is not set from owner\n        if (oldClass[name] && !klass[name] && !ownerClass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        if (klass[name] && !oldClass[name]) {\n            elm.classList.add(name);\n        }\n    }\n}\n\nexport default {\n    create: syncClassNames,\n    update: syncClassNames,\n};\n","import {\n    addComponentSlot,\n    removeComponentSlot,\n} from \"../component\";\nimport { isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\nfunction update(oldVnode: VNode, vnode: ComponentVNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n\n    let { data: { slotset: oldSlots } } = oldVnode;\n    let { data: { slotset: newSlots } } = vnode;\n\n    // infuse key-value pairs from slotset into the component\n    if (oldSlots !== newSlots && (oldSlots || newSlots)) {\n        let key: string, cur: any;\n        oldSlots = oldSlots || EmptyObject;\n        newSlots = newSlots || EmptyObject;\n        // removed slots should be removed from component's slotset\n        for (key in oldSlots) {\n            if (!(key in newSlots)) {\n                removeComponentSlot(vm, key);\n            }\n        }\n\n        // new or different slots should be set in component's slotset\n        for (key in newSlots) {\n            cur = newSlots[key];\n            if (!(key in oldSlots) || oldSlots[key] != cur) {\n                if (cur && cur.length) {\n                    addComponentSlot(vm, key, cur);\n                } else {\n                    removeComponentSlot(vm, key);\n                }\n            }\n        }\n    }\n}\n\nexport default {\n    create: update,\n    update,\n};\n","import assert from \"../assert\";\nimport { renderComponent } from \"../component\";\nimport { isUndefined, ArrayPush } from \"../language\";\n\nfunction rerender(oldVnode: VNode, vnode: ComponentVNode) {\n    const { vm } = vnode;\n    if (isUndefined(vm)) {\n        return;\n    }\n    const { children } = vnode;\n    // if diffing is against an inserted VM, it means the element is already\n    // in the DOM and we can compute its body.\n    if (vm.idx && vm.isDirty) {\n        assert.invariant(oldVnode.children !== children, `If component is dirty, the children collections must be different. In theory this should never happen.`);\n        renderComponent(vm);\n    }\n    // replacing the vnodes in the children array without replacing the array itself\n    // because the engine has a hard reference to the original array object.\n    children.length = 0;\n    ArrayPush.apply(children, vm.fragment);\n}\n\nexport default {\n    create: rerender,\n    update: rerender,\n};\n","import assert from \"../assert\";\nimport { isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\n// TODO: eventually use the one shipped by snabbdom directly\nfunction update(oldVnode: VNode, vnode: VNode) {\n    let oldProps = oldVnode.data.props;\n    let props = vnode.data.props;\n\n    if (isUndefined(oldProps) && isUndefined(props)) {\n        return;\n    }\n    if (oldProps === props) {\n        return;\n    }\n\n    oldProps = oldProps || EmptyObject;\n    props = props || EmptyObject;\n\n    let key: string, cur: any, old: any;\n    const { elm } = vnode;\n\n    for (key in oldProps) {\n        if (!(key in props)) {\n            if (vnode.isRoot) {\n                // custom elements created programatically prevent you from\n                // deleting the property because it has a set/get to update\n                // the corresponding component, in this case, we just set it\n                // to undefined, which has the same effect.\n                elm[key] = undefined;\n            } else {\n                delete elm[key];\n            }\n        }\n    }\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n\n        if (old !== cur) {\n            if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n                // only touching the dom if the prop really changes.\n                assert.block(function devModeCheck() {\n                    if (elm[key] === cur && old !== undefined && !vnode.isRoot) {\n                        console.warn(`Unneccessary update of property \"${key}\" in ${elm}, it has the same value in ${vnode.vm || vnode}.`);\n                    }\n                });\n                elm[key] = cur;\n            }\n        }\n    }\n}\n\nexport default {\n    create: update,\n    update,\n};\n","export var array = Array.isArray;\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n","function createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.nodeValue = text;\n}\nfunction getTextContent(node) {\n    return node.nodeValue;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    // Performance optimization over `return node.nodeType === 3;`\n    return node.splitText !== undefined;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexport var htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexport default htmlDomApi;\n","import { v as vnode } from '../../framework/api';\nimport * as is from './is';\nimport htmlDomApi from './htmldomapi';\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\nvar emptyNode = { sel: \"\", data: {}, children: [] };\nfunction sameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\nfunction isVnode(vnode) {\n    return vnode.sel !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var i, map = {}, key, ch;\n    for (i = beginIdx; i <= endIdx; ++i) {\n        ch = children[i];\n        if (ch != null) {\n            key = ch.key;\n            if (key !== undefined)\n                map[key] = i;\n        }\n    }\n    return map;\n}\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\n// export { h } from './h';\n// export { thunk } from './thunk';\nexport function init(modules, domApi) {\n    var i, j, cbs = {};\n    var api = domApi !== undefined ? domApi : htmlDomApi;\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            var hook = modules[j][hooks[i]];\n            if (hook !== undefined) {\n                cbs[hooks[i]].push(hook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        var id = elm.id ? '#' + elm.id : '';\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                var parent_1 = api.parentNode(childElm);\n                api.removeChild(parent_1, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var i, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.init)) {\n                i(vnode);\n                data = vnode.data;\n            }\n        }\n        var children = vnode.children, sel = vnode.sel;\n        if (sel === '!') {\n            if (isUndef(vnode.text)) {\n                vnode.text = '';\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            var hashIdx = sel.indexOf('#');\n            var dotIdx = sel.indexOf('.', hashIdx);\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                : api.createElement(tag);\n            if (hash < dot)\n                elm.id = sel.slice(hash + 1, dot);\n            if (dotIdx > 0)\n                elm.className = sel.slice(dot + 1).replace(/\\./g, ' ');\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (is.array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    var ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (is.primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            i = vnode.data.hook; // Reuse variable\n            if (isDef(i)) {\n                if (i.create)\n                    i.create(emptyNode, vnode);\n                if (i.insert)\n                    insertedVnodeQueue.push(vnode);\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var i, j, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.destroy))\n                i(vnode);\n            for (i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (j = 0; j < vnode.children.length; ++j) {\n                    i = vnode.children[j];\n                    if (i != null && typeof i !== \"string\") {\n                        invokeDestroyHook(i);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)\n                        cbs.remove[i_1](ch, rm);\n                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {\n                        i_1(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else {\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        var oldStartIdx = 0, newStartIdx = 0;\n        var oldEndIdx = oldCh.length - 1;\n        var oldStartVnode = oldCh[0];\n        var oldEndVnode = oldCh[oldEndIdx];\n        var newEndIdx = newCh.length - 1;\n        var newStartVnode = newCh[0];\n        var newEndVnode = newCh[newEndIdx];\n        var oldKeyToIdx;\n        var idxInOld;\n        var elmToMove;\n        var before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    newStartVnode = newCh[++newStartIdx];\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                    newStartVnode = newCh[++newStartIdx];\n                }\n            }\n        }\n        if (oldStartIdx > oldEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n        }\n        else if (newStartIdx > newEndIdx) {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var i, hook;\n        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n            i(oldVnode, vnode);\n        }\n        var elm = vnode.elm = oldVnode.elm;\n        var oldCh = oldVnode.children;\n        var ch = vnode.children;\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined) {\n            for (i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            i = vnode.data.hook;\n            if (isDef(i) && isDef(i = i.update))\n                i(oldVnode, vnode);\n        }\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            api.setTextContent(elm, vnode.text);\n        }\n        if (isDef(hook) && isDef(i = hook.postpatch)) {\n            i(oldVnode, vnode);\n        }\n    }\n    return function patch(oldVnode, vnode) {\n        var i, elm, parent;\n        var insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (!isVnode(oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n","const xlinkNS = 'http://www.w3.org/1999/xlink';\nconst xmlNS = 'http://www.w3.org/XML/1998/namespace';\nconst ColonCharCode = 58;\nconst XCharCode = 120;\n\nfunction updateAttrs(oldVnode: VNode, vnode: VNode) {\n    let { data: { attrs: oldAttrs } } = oldVnode;\n    let { data: { attrs } } = vnode;\n\n    if (!oldAttrs && !attrs) {\n        return;\n    }\n    if (oldAttrs === attrs) {\n        return;\n    }\n    const { elm } = vnode;\n    let key: string;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        const cur = attrs[key];\n        const old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            } else if (cur === false) {\n                elm.removeAttribute(key);\n            } else {\n                if (key.charCodeAt(0) !== XCharCode) {\n                    elm.setAttribute(key, cur);\n                } else if (key.charCodeAt(3) === ColonCharCode) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                } else if (key.charCodeAt(5) === ColonCharCode) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                } else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\n\nconst attributesModule: Module = {\n    create: updateAttrs,\n    update: updateAttrs\n};\nexport default attributesModule;\n","import {\n    isString,\n} from './../language';\n\nconst DashCharCode = 45;\n\nfunction updateStyle(oldVnode: VNode, vnode: VNode) {\n    let { data: { style: oldStyle } } = oldVnode;\n    let { data: { style } } = vnode;\n\n    if (!oldStyle && !style) {\n        return;\n    }\n    if (oldStyle === style) {\n        return;\n    }\n    oldStyle = oldStyle || {};\n    style = style || {};\n\n    let name: string;\n    const { elm } = vnode;\n\n    if (isString(style)) {\n        elm.style.cssText = style;\n    } else {\n        if (isString(oldStyle)) {\n            elm.style.cssText = '';\n        } else {\n            for (name in oldStyle) {\n                if (!(name in style)) {\n                    elm.style.removeProperty(name);\n                }\n            }\n        }\n\n        for (name in style) {\n            const cur = style[name];\n            if (cur !== oldStyle[name]) {\n                if (name.charCodeAt(0) === DashCharCode && name.charCodeAt(1) === DashCharCode) {\n                    // if the name is prefied with --, it will be considered a variable, and setProperty() is needed\n                    elm.style.setProperty(name, cur);\n                } else {\n                    elm.style[name] = cur;\n                }\n            }\n        }\n    }\n}\n\nconst styleModule: Module = {\n    create: updateStyle,\n    update: updateStyle,\n};\nexport default styleModule;\n","import { EmptyObject } from \"../utils\";\n\nfunction updateClass(oldVnode: VNode, vnode: VNode) {\n    const { data: { class: oldClass = EmptyObject } } = oldVnode;\n    const { elm, data: { class: klass = EmptyObject } } = vnode;\n\n    if (oldClass === klass) {\n        return;\n    }\n\n    const innerClass = (vnode.vm && vnode.vm.cmpClasses) || EmptyObject;\n\n    let name: string\n    for (name in oldClass) {\n        // remove only if it is not in the new class collection and it is not set from within the instance\n        if (!klass[name] && !innerClass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        if (!oldClass[name]) {\n            elm.classList.add(name);\n        }\n    }\n}\n\nexport default {\n    create: updateClass,\n    update: updateClass\n};\n","import { isUndefined } from \"../language\";\nimport { EmptyObject } from \"../utils\";\n\nfunction handleEvent(event: Event, vnode: VNode) {\n    const { type } = event;\n    const { data: { on } } = vnode;\n    let handler = on && on[type];\n    // call event handler if exists\n    if (handler) {\n        handler.call(undefined, event);\n    }\n}\n\nfunction createListener(): EventListener {\n    return function handler(event: Event) {\n        handleEvent(event, handler.vnode);\n    }\n}\n\nfunction removeAllEventListeners(vnode: VNode) {\n    const { data: { on }, listener } = vnode;\n    if (on && listener) {\n        const { elm } = vnode;\n        let name;\n        for (name in on) {\n            elm.removeEventListener(name, listener, false);\n        }\n        vnode.listener = undefined;\n    }\n}\n\nfunction updateEventListeners(oldVnode: VNode, vnode: VNode) {\n    const { data: { on: oldOn = EmptyObject } } = oldVnode;\n    const { data: { on = EmptyObject } } = vnode;\n\n    if (oldOn === on) {\n        return;\n    }\n\n    const { elm } = vnode;\n    const { elm: oldElm } = oldVnode;\n    const listener = vnode.listener = oldVnode.listener || createListener();\n    listener.vnode = vnode;\n\n    let name;\n    for (name in on) {\n        if (isUndefined(oldOn[name])) {\n            elm.addEventListener(name, listener, false);\n        }\n    }\n    for (name in oldOn) {\n        if (isUndefined(on[name])) {\n            oldElm.removeEventListener(name, listener, false);\n        }\n    }\n}\n\nconst eventListenersModule: Module = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: removeAllEventListeners\n};\nexport default eventListenersModule;\n","import { OwnerKey } from \"../vm\";\n\nfunction updateUID(oldVnode: VNode, vnode: VNode) {\n    const { uid: oldUid } = oldVnode;\n    const { elm, uid } = vnode;\n    if (uid === oldUid) {\n        return;\n    }\n    // @ts-ignore\n    elm[OwnerKey] = uid;\n}\n\nconst uidModule: Module = {\n    create: updateUID,\n    update: updateUID,\n};\nexport default uidModule;\n","import componentInit from \"./modules/component-init\";\nimport componentProps from \"./modules/component-props\";\nimport componentAttrs from \"./modules/component-attrs\";\nimport componentEvents from \"./modules/component-events\";\nimport componentClasses from \"./modules/component-classes\";\nimport componentSlotset from \"./modules/component-slotset\";\nimport componentChildren from \"./modules/component-children\";\nimport props from \"./modules/props\";\n\nimport { init } from \"../3rdparty/snabbdom/snabbdom\";\nimport attrs from \"./modules/attrs\";\nimport styles from \"./modules/styles\";\nimport classes from \"./modules/classes\";\nimport events from \"./modules/events\";\nimport uid from \"./modules/uid\";\n\nexport const patch = init([\n    componentInit,\n    componentSlotset,\n    componentProps,\n    componentAttrs,\n    componentEvents,\n    componentClasses,\n    componentChildren,\n    props,\n    attrs,\n    classes,\n    styles,\n    events,\n    uid,\n]);\n","import assert from \"./assert\";\nimport { patch } from \"./patch\";\nimport { scheduleRehydration } from \"./vm\";\nimport { invokeComponentAttributeChangedCallback } from \"./invoker\";\nimport { updateComponentProp } from \"./component\";\nimport { getComponentDef } from \"./def\";\nimport { c } from \"./api\";\nimport { isUndefined, isFunction } from \"./language\";\nimport { getPropNameFromAttrName } from \"./utils\";\n\nconst { getAttribute, setAttribute, removeAttribute } = Element.prototype;\n\nfunction linkAttributes(element: HTMLElement, vm: VM) {\n    assert.vm(vm);\n    const { def: { props: propsConfig, observedAttrs } } = vm;\n    // replacing mutators and accessors on the element itself to catch any mutation\n    element.getAttribute = (attrName: string): string | null => {\n        attrName = attrName.toLocaleLowerCase();\n        const propName = getPropNameFromAttrName(attrName);\n        if (propsConfig[propName]) {\n            assert.logError(`Invalid attribute \"${attrName}\" for ${vm}. Instead access the public property with \\`element.${propName};\\`.`);\n            return;\n        }\n        return getAttribute.call(element, attrName);\n    };\n    element.setAttribute = (attrName: string, newValue: any) => {\n        attrName = attrName.toLocaleLowerCase();\n        const propName = getPropNameFromAttrName(attrName);\n        if (propsConfig[propName]) {\n            assert.logError(`Invalid attribute \"${attrName}\" for ${vm}. Instead update the public property with \\`element.${propName} = value;\\`.`);\n            return;\n        }\n        const oldValue = getAttribute.call(element, attrName);\n        setAttribute.call(element, attrName, newValue);\n        newValue = getAttribute.call(element, attrName);\n        if (attrName in observedAttrs && oldValue !== newValue) {\n            invokeComponentAttributeChangedCallback(vm, attrName, oldValue, newValue);\n        }\n    };\n    element.removeAttribute = (attrName: string) => {\n        attrName = attrName.toLocaleLowerCase();\n        const propName = getPropNameFromAttrName(attrName);\n        if (propsConfig[propName]) {\n            assert.logError(`Invalid attribute \"${attrName}\" for ${vm}. Instead update the public property with \\`element.${propName} = undefined;\\`.`);\n            return;\n        }\n\n        assert.block(function devModeCheck() {\n            const propName = getPropNameFromAttrName(attrName);\n            if (propsConfig[propName]) {\n                updateComponentProp(vm, propName, newValue);\n                if (vm.isDirty) {\n                    console.log(`Scheduling ${vm} for rehydration.`);\n                    scheduleRehydration(vm);\n                }\n            }\n        });\n        const oldValue = getAttribute.call(element, attrName);\n        removeAttribute.call(element, attrName);\n        const newValue = getAttribute.call(element, attrName);\n        if (attrName in observedAttrs && oldValue !== newValue) {\n            invokeComponentAttributeChangedCallback(vm, attrName, oldValue, newValue);\n        }\n    };\n}\n\nfunction getInitialProps(element: HTMLElement, Ctor: Class<Component>): HashTable<any> {\n    const { props: config } = getComponentDef(Ctor);\n    const props = {};\n    for (let propName in config) {\n        if (propName in element) {\n            props[propName] = element[propName];\n        }\n    }\n    return props;\n}\n\nfunction getInitialSlots(element: HTMLElement, Ctor: Class<Component>): HashTable<any> {\n    const { slotNames } = getComponentDef(Ctor);\n    if (isUndefined(slotNames)) {\n        return;\n    }\n    // TODO: implement algo to resolve slots\n    return undefined;\n}\n\n/**\n * This algo mimics 2.5 of web component specification somehow:\n * https://www.w3.org/TR/custom-elements/#upgrades\n */\nfunction upgradeElement(element: HTMLElement, Ctor: Class<Component>) {\n    if (isUndefined(Ctor)) {\n        throw new TypeError(`Invalid Component Definition: ${Ctor}.`);\n    }\n    const props = getInitialProps(element, Ctor);\n    const slotset = getInitialSlots(element, Ctor);\n    const tagName = element.tagName.toLowerCase();\n    const vnode = c(tagName, Ctor, { props, slotset, className: element.className || undefined });\n    vnode.isRoot = true;\n    // TODO: eventually after updating snabbdom we can use toVNode(element)\n    // as the first argument to reconstruct the vnode that represents the\n    // current state.\n    const { vm } = patch(element, vnode);\n    linkAttributes(element, vm);\n}\n\n/**\n * This method is almost identical to document.createElement\n * (https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement)\n * with the slightly difference that in the options, you can pass the `is`\n * property set to a Constructor instead of just a string value. E.g.:\n *\n * const el = createElement('x-foo', { is: FooCtor });\n *\n * If the value of `is` attribute is not a constructor,\n * then we fallback to the normal Web-Components workflow.\n */\nexport function createElement(tagName: string, options: any = {}): HTMLElement {\n    const Ctor = isFunction(options.is) ? options.is : null;\n    const element = document.createElement(tagName, Ctor ? null : options);\n\n    if (Ctor && element instanceof HTMLElement) {\n        upgradeElement(element, Ctor);\n    }\n    return element;\n}\n\n// TODO: how can a user dismount a component and kick in the destroy mechanism?\n"],"names":["_a","getLinkedElement","toString","setKey","getKey","callKey","deleteKey","inKey","iterableKey","Element","update","createElement","i","hooks","c","vnode","is.array","is.primitive","eventListenersModule","componentEvents","attrs","styles","events","uid"],"mappings":"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"}